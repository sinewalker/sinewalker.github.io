<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Milosophical Me (debian)</title><link>http://milosophical.me/</link><description></description><language>en</language><lastBuildDate>Wed, 28 Jan 2015 08:58:44 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Install Emacs24 Snapshot on Debian, Ubuntu and Windows 7</title><link>http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I just can't wait for &lt;a title="An overview of what's coming in Emacs 24" href="http://www.masteringemacs.org/articles/2011/12/06/what-is-new-in-emacs-24-part-1/"&gt;Emacs24&lt;/a&gt; to be released! (I know, it's in beta and it'll be officially released Real Soon Now, but my catalyst is Technomancy's ESK2 which is such an improvement over ESK1, and it needs Emacs 24).


In &lt;a title="Build/Install emacs 24 on debian" href="http://sinewalker.wordpress.com/2012/01/15/build-and-install-emacs24-on-debian-squeeze/"&gt;my last post&lt;/a&gt; I had steps to build emacs from source-code. This is worth following for hacker cred, but it soon gets tedious if you have a lot of systems to put emacs on. As pointed out by a few readers, there are some snapshot builds available for different platforms. This post lists steps for installing the pre-built snapshots, for the three operating systems that I use.



&lt;!--more--&gt;



&lt;/p&gt;&lt;h3&gt;Debian&lt;/h3&gt;

As pointed out earlier, you can get &lt;a href="http://emacs.naquadah.org/"&gt;emacs-snapshot builds for Debian&lt;/a&gt; from Julien Danjou (of &lt;a href="http://awesome.naquadah.org"&gt;awesome&lt;/a&gt; fame). That page does have instructions, but I'll list them here anyway:



&lt;ol&gt;
 &lt;li&gt;Import the key (this is a one-line pipeline, broken for display only):
&lt;pre&gt;

$ &lt;strong&gt;wget -q -O - http://emacs.naquadah.org/key.gpg 

| sudo apt-key add -&lt;/strong&gt;



&lt;/pre&gt;
 &lt;/li&gt;
 &lt;li&gt;Add the snapshot repository to your &lt;strong&gt;&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/strong&gt; (by hand). Here's Julien's "stable" snapshot:
&lt;pre&gt;

deb http://emacs.naquadah.org/ stable/

deb-src http://emacs.naquadah.org/ stable/



&lt;/pre&gt;
 &lt;/li&gt;
 &lt;li&gt;Update your package database
&lt;pre&gt;

$ &lt;strong&gt;sudo aptitude update&lt;/strong&gt;



&lt;/pre&gt;
 &lt;/li&gt;
 &lt;li&gt;Install emacs-snapshot
&lt;pre&gt;

$ &lt;strong&gt;sudo aptitude install &lt;code&gt;emacs-snapshot&lt;/code&gt;&lt;/strong&gt;



&lt;/pre&gt;
 &lt;/li&gt;
&lt;/ol&gt;



&lt;h3&gt;Ubuntu&lt;/h3&gt;

I'm running Ubuntu 11.10 in a VirtualBox on work's Windows 7 machine. As mentioned at Julien Danjou's page,

Damien Cassou makes a version of the same emacs-snapshot for Ubuntu, which is hosted &lt;a title="emacs-snapshot PPA for ubuntu" href="https://launchpad.net/~cassou/+archive/emacs"&gt;at Launchpad&lt;/a&gt;. You add it and install simalarly:



&lt;ol&gt;
 &lt;li&gt;Add the PPA (Personal Package Archive). This also imports the key:
&lt;pre&gt;

$ &lt;strong&gt;sudo add-apt-repository ppa:cassou/emacs&lt;/strong&gt;



&lt;/pre&gt;
 &lt;/li&gt;
 &lt;li&gt;Update your package database
&lt;pre&gt;

$ &lt;strong&gt;sudo apt-get update&lt;/strong&gt;



&lt;/pre&gt;
 &lt;/li&gt;
 &lt;li&gt;Install emacs-snapshot
&lt;pre&gt;

$ &lt;strong&gt;sudo apt-get install emacs-snapshot&lt;/strong&gt;



&lt;/pre&gt;
 &lt;/li&gt;
&lt;/ol&gt;



&lt;h3&gt;Windows&lt;/h3&gt;

It's handy to have a native Windows emacs as well as the one in the VM. Of course being Windows, it's more complicated to install and configure... This has been tested on Windows 7:



&lt;ol&gt;
 &lt;li&gt;Download the latest PKZIP-ed binary from &lt;a href="http://code.google.com/p/emacs-for-windows/updates/list"&gt;Google Code&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;Unpack the ZIP (Windows Explorer &lt;em&gt;can&lt;/em&gt; open ZIP files -- but &lt;a href="http://www.7-zip.org"&gt;7zip&lt;/a&gt; is mich nicer). I like to unpack emacs in &lt;code&gt;&lt;strong&gt;c:\Applications\emacs&lt;/strong&gt;&lt;/code&gt;&lt;em&gt;&amp;lt;version&amp;gt;&lt;/em&gt; so I can maintain several different versions at once&lt;/li&gt;
 &lt;li&gt;(&lt;em&gt;optional&lt;/em&gt;) Put a windows symlink to the version of emacs you want to use.  This assumes your C: drive is formatted with NTFS, which on most Windows systems it is. The symlink can then be used for your %PATH% later and you won't have to edit the variable again to change versions, which for some odd reason is a convoluted operation in Windows... Type the following in a &lt;strong&gt;CMD.EXE&lt;/strong&gt; prompt:
&lt;pre&gt;

C:\&amp;gt; &lt;strong&gt;CD C:\Applications&lt;/strong&gt;

C:\Applications\&amp;gt; &lt;strong&gt;MKLINK /D emacs emacs&lt;/strong&gt;&lt;em&gt;&amp;lt;version&amp;gt;&lt;/em&gt;



&lt;/pre&gt;
 &lt;/li&gt;
 &lt;li&gt;Create an &lt;em&gt;Environment Variable&lt;/em&gt; called &lt;code&gt;&lt;strong&gt;%HOME%&lt;/strong&gt;&lt;/code&gt; that refers to your Windows home directory (&lt;code&gt;C:\Users\&lt;/code&gt;&lt;em&gt;&amp;lt;username&amp;gt;&lt;/em&gt;). This is so that you can put your &lt;code&gt;.emacs.d&lt;/code&gt; in your home directory, and Emacs will find it:
 &lt;ol type="a"&gt;
  &lt;li&gt;Open &lt;strong&gt;Windows Explorer&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Right-click on "&lt;strong&gt;My Computer&lt;/strong&gt;", choose "&lt;strong&gt;Properties&lt;/strong&gt;"&lt;/li&gt;
  &lt;li&gt;Choose "&lt;strong&gt;Advance system settings&lt;/strong&gt;" (Really? what's so advanced about an environment variable?)&lt;/li&gt;
  &lt;li&gt;Make sure the "&lt;strong&gt;Advanced&lt;/strong&gt;" tab of the &lt;strong&gt;System Properties&lt;/strong&gt; dialog is selected, then press the "&lt;strong&gt;Environment Variables...&lt;/strong&gt;" button&lt;/li&gt;
  &lt;li&gt;Press the top "&lt;strong&gt;New...&lt;/strong&gt;" button (to add a personal variable, rather than system variable)&lt;/li&gt;
  &lt;li&gt;in the "&lt;strong&gt;Variable name:&lt;/strong&gt;" field, enter &lt;code&gt;&lt;strong&gt;HOME&lt;/strong&gt;&lt;/code&gt;. In the "&lt;strong&gt;Variable value:&lt;/strong&gt;" field, put &lt;code&gt;&lt;strong&gt;%USERPROFILE%&lt;/strong&gt;&lt;/code&gt;, press "&lt;strong&gt;OK&lt;/strong&gt;" button&lt;/li&gt;
  &lt;li&gt;Press the other "&lt;strong&gt;OK&lt;/strong&gt;" button to dismiss the Environment Varables dialog&lt;/li&gt;
  &lt;li&gt;Press yet another "&lt;strong&gt;OK&lt;/strong&gt;" button to dismiss the System Properties dialog&lt;/li&gt;
 &lt;/ol&gt;
 &lt;/li&gt;
 &lt;li&gt;Put emacs in your &lt;code&gt;&lt;strong&gt;%PATH%&lt;/strong&gt;&lt;/code&gt;. Use the same steps above to edit the Sytem variable PATH and add the path to Emacs (&lt;code&gt;&lt;strong&gt;;C:\Applications\emacs\bin&lt;/strong&gt;&lt;/code&gt; if you put a symlink in step 3)&lt;/li&gt;
&lt;/ol&gt;



&lt;h3&gt;Personal Emacs settings&lt;/h3&gt;

You can now put your emacs settings into &lt;code&gt;~/.emacs.d&lt;/code&gt; (that's &lt;code&gt;%HOME%\.emacs.d&lt;/code&gt; for Windows). I highly recommend &lt;a title="Technomany's home" href="http://technomancy.us/"&gt;Technomancy&lt;/a&gt;'s &lt;a title="GitHub ESK2 branch" href="https://github.com/technomancy/emacs-starter-kit"&gt;Emacs Starter Kit&lt;/a&gt; (version 2).



My own&lt;code&gt; ~/.emacs.d/init.el&lt;/code&gt; is set up to bootstrap ESK2 and a few favourite packages, just as Technomancy describes. 



One package I'd like to mention here is "&lt;a href="http://xahlee.org/emacs/ergonomic_emacs_keybinding.html"&gt;ergoemacs-keybindings&lt;/a&gt;" which gives more modern/ergonomic key bindings to emacs. Together with cua-mode, it makes Emacs behave very nicely. Currently though I notice there's a problem loading the package (maybe it's autoloads aren't right yet?) So I have to hack it as described in the package's README, (with a hard-coded path to the package directory, that'll break if I update it in the future because it has the package version) but I hope to fix it and send a patch for Xah Real Soon Now...  In the mean-time, here's a snippet:




~~~~~~~~~~~~{.clojure}


;;;; egroemacs keybindings

(setenv "ERGOEMACS_KEYBOARD_LAYOUT" "dv") ; US Dvorak (Ergonomic)



;; FIX: for some reason the library isn't loading from the package? 

;;      Have to put full path to the load file, which is brittle

(when (package-installed-p 'ergoemacs-keybindings)
  (load-file "~/.emacs.d/elpa/ergoemacs-keybindings-5.3.9/ergoemacs-keybindings.el")
  (ergoemacs-mode 1)
  (cua-mode 1))

~~~~~~~~~~~~




(btw, the lisp-ish CSH above is done by using WordPress' sourcecode block and specifying "clojure" for the language)</description><category>debian</category><category>emacs</category><category>emacs24</category><category>hacking</category><category>tips</category><category>ubuntu</category><category>windows</category><guid>http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html</guid><pubDate>Mon, 13 Feb 2012 00:15:29 GMT</pubDate></item><item><title>Build and install Emacs24 on Debian squeeze</title><link>http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;Hacking in Debian is so easy (one of the reasons I switched). Take, for instance, building Emacs. This is such a piece of cake compared to the weird hoops you have to go through to get all the build dependencies on other platforms. It's something I never tried before, simply because it was too daunting trying to figure out all the packages I need to install. But apt-get has this awesome --build-deps switch...
&lt;!--more--&gt;

So then, how to build and install Emacs 24 on Debian squeeze, in 6 easy steps?  Since Emacs24 is not yet released, there isn't a package for it in Debian (which is why I'm building my own). But I figured that the build dependencies would not have changed too much from Emacs23, so I used that, and it worked.

&lt;/p&gt;&lt;ol&gt;
 &lt;li&gt; Install the build dependencies:
 &lt;pre&gt;&lt;code&gt; 
   # &lt;strong&gt;apt-get build-dep emacs23&lt;/strong&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;
  This installs all the compilers, parsers, development libraries and other parts of the GNU toolchain that is needed to build the emacs23 package.
 &lt;/li&gt;
 &lt;li&gt; Download the source code. I used the &lt;a href="https://github.com/emacsmirror/emacs"&gt;GitHub mirror&lt;/a&gt; of the official GNU &lt;a href="http://savannah.gnu.org/projects/emacs/"&gt;Savana codebase&lt;/a&gt;, and downloaded the newest PKzip archive from there.  There is probably a newer one now. Purists probably would check-out direct from either Savana or GitHub rather than download a zip archive... I'm not going to hack emacs itself though, so I don't care.&lt;br&gt;
 &lt;/li&gt;
 &lt;li&gt; Unzip the archive and generate the configure script (the autogen step is skipped in the INSTALL file by the way, good thing I've &lt;a href="http://airs.com/ian/configure/configure_3.html#SEC16"&gt;done my homework&lt;/a&gt;):
 &lt;pre&gt;&lt;code&gt;
   $ &lt;strong&gt;unzip emacsmirror-emacs-EMACS_PRETEST_24_9_92-295-g2dccfc4.zip&lt;/strong&gt;
   $ &lt;strong&gt;cd emacsmirror-emacssnapshot&lt;/strong&gt;
   $ &lt;strong&gt;./autogen.sh
 &lt;/strong&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;
 &lt;/li&gt;
 &lt;li&gt;Follow the INSTALL instructions:&lt;br&gt;
 &lt;pre&gt;&lt;code&gt;
   $ &lt;strong&gt;./configure&lt;/strong&gt;
   $ &lt;strong&gt;make&lt;/strong&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;br&gt;
 &lt;/li&gt;
 &lt;li&gt;Test it (Note:- if you watch the build, you'll see that after the C core of emacs is built, emacs itself is used to compile the elisp components, so building also makes a fairly good test of the C parts anyway):&lt;br&gt;
  &lt;pre&gt;&lt;code&gt;
   $ &lt;strong&gt;src/emacs -Q&lt;/strong&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;br&gt;
 &lt;/li&gt;
 &lt;li&gt; If okay, install it:
  &lt;pre&gt;&lt;code&gt;
   # &lt;strong&gt;make install&lt;/strong&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;br&gt;
 &lt;/li&gt;
&lt;/ol&gt;

</description><category>build-deps</category><category>debian</category><category>emacs</category><category>hacking</category><category>how-to</category><guid>http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html</guid><pubDate>Sun, 15 Jan 2012 11:57:54 GMT</pubDate></item><item><title>Implementing a caching-only DNS on Debian</title><link>http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;After 3 years of sticking with Novell, I recently switched away from openSUSE to &lt;a title="Debian GNU/Linux" href="http://www.debian.org" target="_blank"&gt;Debian&lt;/a&gt;. There are a few reasons why, but I won't bore you with them. So far I'm liking it. There are a few things to set up before I settle in, and one is slow DNS lookup.


&lt;!--more--&gt;



I described how and why to make a &lt;a title="Implementing a caching-only DNS on openSUSE" href="http://sinewalker.wordpress.com/2010/07/20/implementing-a-caching-only-dns-on-opensuse/"&gt;caching-only DNS on openSUSE&lt;/a&gt; in July 2010.  In Debian it's a little different:

&lt;/p&gt;&lt;ol&gt;
	&lt;li&gt;Install bind of course. The package is called &lt;em&gt;bind9 &lt;/em&gt;and installs itself as a service and starts automatically, no need to mess with runlevels:
         &lt;div&gt;
          &lt;code&gt;
# &lt;strong&gt;aptitude install bind9&lt;/strong&gt;


          &lt;/code&gt;
         &lt;/div&gt;
        &lt;/li&gt;
	&lt;li&gt;The config for bind in Debian is a subdirectory structure in &lt;code&gt;/etc/bind&lt;/code&gt;.  For a simple caching-only server, you leave /etc/bind/named.conf untouched and instead change &lt;code&gt;&lt;strong&gt;/etc/bind/named.conf.options&lt;/strong&gt;&lt;/code&gt; to have your &lt;em&gt;forwarders&lt;/em&gt;:
        &lt;div&gt;
          &lt;code&gt;
// MJL20120111 - Adding Google2, OpenDNS1, gateway

forwarders {
    8.8.4.4; 208.67.222.222; 192.168.1.1;
};


          &lt;/code&gt;
         &lt;/div&gt;
        &lt;/li&gt;
	&lt;li&gt;Restart bind to load the new configuration:
         &lt;div&gt;
          &lt;code&gt;
# &lt;strong&gt;service bind9 restart&lt;/strong&gt;


          &lt;/code&gt;
         &lt;/div&gt;
        &lt;/li&gt;
	&lt;li&gt;You will need to change your network to use the local bind. I used &lt;a title="NetworkManager's home page" href="http://projects.gnome.org/NetworkManager/"&gt;NetworkManager&lt;/a&gt; on the GNOME desktop, but you can just edit &lt;strong&gt;&lt;code&gt;/etc/resolv.conf&lt;/code&gt;&lt;/strong&gt;:
         &lt;div&gt;
          &lt;code&gt;
nameserver 127.0.0.1 #local bind


          &lt;/code&gt;
         &lt;/div&gt;
If you edit the file by hand, you'll have to restart the network somehow (haven't found out how yet, except with NetworkManager).&lt;/li&gt;
	&lt;li&gt;Done. Test it:
         &lt;div&gt;
          &lt;code&gt;
$ &lt;strong&gt;nslookup australia.gov.au&lt;/strong&gt;

Server:127.0.0.1

Address:127.0.0.1#53Non-authoritative answer:

Name:australia.gov.au

Address: 205.239.168.12


          &lt;/code&gt;
         &lt;/div&gt;
        &lt;/li&gt;
&lt;/ol&gt;

All good, and much faster. Happy surfing.</description><category>DNS</category><category>bind</category><category>debian</category><category>hacking</category><category>network</category><guid>http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html</guid><pubDate>Wed, 11 Jan 2012 03:35:59 GMT</pubDate></item></channel></rss>