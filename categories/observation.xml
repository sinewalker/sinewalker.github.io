<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Milosophical Me (observation)</title><link>http://milosophical.me/</link><description></description><language>en</language><lastBuildDate>Fri, 23 Jan 2015 22:36:09 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Back to openSUSE</title><link>http://milosophical.me/blog/2008/03/31/back-to-opensuse.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;Well, my stint in *buntu is over, and it ends with an award to openSUSE: this is the first Linux distro I've returned to.


Kubuntu is nice, and I'm happy that I've tried it out, but it's not for me. It's nice enough if you want a simple desktop system, and APT rocks (especially with the aptitude front-end). But it's just not as good as openSUSE, sorry.



&lt;!--more--&gt;Kubuntu's KDE version of the apt installer (Adept) crashes during installs (not exactly inspiring confidence in the system) so I used Synaptic instead, why can't they just stick to the one that works? It's not like Adept is integrated with KDE in any way: it's menus don't go on the KDE menu bar for instance. Also Kubuntu's version of the KDE help system has every heading repeated. And the constant bickering between the GTK and QT factions of *buntu, with insane NIH arguments are just anoying (it's all *buntu, for crying out loud!).  Finally, having watched &lt;a title="Blank ttys when using vesafb (vga=xxx)" href="https://bugs.launchpad.net/bugs/129910"&gt;bug #129910&lt;/a&gt; continue in it's ridiculous way, I've decided I don't particularly like the development community behind *buntu either. I mean, come on! Six months to fix a reversion introduced to frame buffer consoles in Gutsy?! WTF! Okay that might be a bit mean: it's probably a tricky bug. But, the continuous "not a bug" comments from developers and "please consider the code of conduct" comments from moderators (in response to comments where the "code" has &lt;em&gt;not&lt;/em&gt; been broken) are just insulting. Add in that other things weren't working (FreeNX being an important one for me) and I've had enough: I've moved on, or rather, back, to openSUSE.



I briefly considered Debian, but went back to something I know. Besides, openSUSE 10.3 has removed the hideous mistake that was ZMD, and so updates and installs (using zypper, at least) are actually not too slow now, and boot times are comparible with *buntu too, at about 30 secs for my five-year-old AlthonXP, which were my biggest gripes with 10.2. YaST is still rather slow, but there are promising signs that this will improve for 11. KDE 4.0 should be standard with 11 also, and 4.1 won't be too far behind. Looking forward to it. It's nice to be using a distro where innovation is happening (Compiz; Kickoff, which I didn't like initially but has grown on me with KDE 4; KDE development in general)

&lt;/p&gt;&lt;p align="center"&gt;I've taken the green pill and having a lot of fun ;)&lt;/p&gt;</description><category>SUSE</category><category>alternatives</category><category>computers</category><category>hacking</category><category>kubuntu</category><category>observation</category><category>rant</category><category>thoughts</category><guid>http://milosophical.me/blog/2008/03/31/back-to-opensuse.html</guid><pubDate>Sun, 30 Mar 2008 22:44:49 GMT</pubDate></item><item><title>Preserving the programming craft</title><link>http://milosophical.me/blog/2006/05/01/preserving-the-programming-craft.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.wordpress.com/2006/05/01/preserving-the-programming-craft/"&gt;sinewalker.wordpress.com&lt;/a&gt;
  on 1 May 2006.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;I
  posted &lt;a href="http://ask.slashdot.org/comments.pl?sid=184329&amp;amp;cid=15234982"&gt;this
    reply &lt;/a&gt;to an Ask
  Slashdot:  &lt;a href="http://ask.slashdot.org/article.pl?sid=06/04/28/2236239"&gt;Do
    Kids still program?&lt;/a&gt; I found myself commenting all over that thread… it
  must be close to my heart :-) Reproducing here, and exploring a little
  further.&lt;/p&gt;

&lt;br&gt;


&lt;p&gt;
Many of the observations made on Slashdot are right. I wonder what it is that
drives me to hack, that is missing from what is covered? Why do I like to hack,
and why would it be passed over by kids these days? Or would it?
&lt;/p&gt;

&lt;br&gt;

&lt;!--more--&gt;
&lt;p&gt;For instance, when all that my computer would do when I turned it on was
blink a cursor and answer
“&lt;a href="http://www.cpc-emu.org/firststeps.html"&gt;Syntax error&lt;/a&gt;” to
everything I typed, why didn't I just get bored and do something fun, like read
a good book, watch TV, or go outside and play? Why was I still motivated to
program instead?&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
I think that the answer is: &lt;strong&gt;I was fascinated by
the &lt;em&gt;puzzle&lt;/em&gt;&lt;/strong&gt;. I was also keenly interested in figuring out how
things work. I used to pull clocks apart, build electronic toys, re-wire
stereos, that sort of thing: a computer is just another gadget to
tweak. Although, because it was very very expensive (about AU$3500 for a Z-80
based 8-bit micro in 1986!) I'd better figure out how it works by “programming”
it—whatever that is—rather than by taking it apart.  I was encouraged in this
because the book that came with the computer says “you can't break your
computer by programming it”… (The book I refer to the is very
good &lt;a title="Online archive copy of the Amstrad CPC 6128 manual." href="http://www.cpcwiki.eu/manuals/AmstradCPC6128-hypertext-en-Sinewalker.pdf"&gt;introductory
manual&lt;/a&gt; for the &lt;a title="Some basic info in this 8-bit home micro" href="http://www.cpcwiki.eu/index.php/6128"&gt;CPC-6128&lt;/a&gt;, published by Amstrad
Computer in 1985; I've not found one to better it yet, see especially Ch 2, 6
and 8)
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
If computers present a puzzle that is interesting, has a low entry barrier, and
rewards exploration, then kids will program it. Other posts in this thread show
that: the puzzle isn't interesting if the computer does nearly everything you
want anyway, the entry barrier is very high (hidden or non-existent programming
tools) and the reward for exploration is quite low (results gained through
programming lower than you get from an Internet search, most of the time).
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
It's sad. I have a very young son who (if he's interested later—he's only 6
months old now :-D ) I'd &lt;em&gt;love&lt;/em&gt; to share my love of programming
with. But in light of how
“&lt;a href="http://ask.slashdot.org/comments.pl?sid=184329&amp;amp;cid=15234943"&gt;kids
these days&lt;/a&gt;” view computers, I'm having a hard time coming up with
interesting puzzles that are easy to get started in and reward
exploration. &lt;a href="http://www.squeak.org"&gt;Squeak&lt;/a&gt; has
a &lt;a href="http://www.squeakland.org/"&gt;low barrier&lt;/a&gt;, maybe using it to write
a simple game, with the hope that the reward of “I did it myself” is good
enough, would work? That is about the best I can come up with.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Why do I think this is important? Why not just let kids
be &lt;a href="http://www.squeakland.org/school/HTML/essays/dynabook_revisited.htm"&gt;computer
illiterate&lt;/a&gt;? I don't know. I think it's out of a sense of preserving culture
and skills, probably the same sense that a carpenter laments the passing of his
craft.&lt;/p&gt;</description><category>hacking</category><category>observation</category><category>programming</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/05/01/preserving-the-programming-craft.html</guid><pubDate>Mon, 01 May 2006 05:00:21 GMT</pubDate></item><item><title>Mystical jargon</title><link>http://milosophical.me/blog/2006/04/04/mystical-jargon.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.wordpress.com/2006/04/04/mystical-jargon/"&gt;sinewalker.wordpress.com&lt;/a&gt;
  on 4 April 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;I'm sure this observation has been made elsewhere, but I can't find reference to it online.&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Have you ever noticed the prolific use of mystical/fantastical words in computer jargon? I'm sure there is a significance, or at least a tongue-in-cheek pointing to the wizardly ways of early and contemporary computer experts.  It is funny I suppose, and when you look at how wide-spread it is, it may be revealing of the hacker psych.&lt;/p&gt;

&lt;br&gt;

&lt;!--more--&gt;
&lt;p&gt;
Anyway, here is a list I've compiled (mostly from the &lt;a href="http://www.jargon.org"&gt;Jargon File&lt;/a&gt;) of mystical/fantastical terms used in computing:

&lt;/p&gt;

&lt;br&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/A/Angband.html"&gt;Angband&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.ietf.org/rfc/rfc527.txt"&gt;ARPA-wocky&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/A/avatar.html"&gt;avatar&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/B/big-endian.html"&gt;big-endian&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/B/black-magic.html"&gt;black magic&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/B/buried-treasure.html"&gt;burried treasure&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/D/daemon.html"&gt;daemon&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/D/deep-magic.html"&gt;deep magic&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/D/demon.html"&gt;demon&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/D/Discordianism.html"&gt;Discordianism&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/D/dragon.html"&gt;dragon&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://dwarf.freestandards.org/Home.php"&gt;DWARF&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/E/elder-days.html"&gt;elder days&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Executable_and_Linkable_Format"&gt;ELF&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/E/elvish.html"&gt;elvish&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/E/Eris.html"&gt;Eris&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/F/Frankenputer.html"&gt;Frankenputer&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://milosophical.me/blog/2006/04/04/www.gnome.org"&gt;GNOME&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/G/Great-Worm.html"&gt;Great Worm&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/G/guru.html"&gt;guru&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/G/guru-meditation.html"&gt;guru meditation&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/H/heavy-wizardry.html"&gt;heavy wizardry&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/H/heisenbug.html"&gt;heisenbug&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/H/hex.html"&gt;hex&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/I/incantation.html"&gt;incantation&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.sun.com/software/jini/"&gt;JINI&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/L/line-666.html"&gt;line 666&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/M/magic.html"&gt;magic&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/M/magic-number.html"&gt;magic number&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/M/magic-smoke.html"&gt;magic smoke&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/O/Oracle--the.html"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Pixel"&gt;pixel&lt;/a&gt; (from pixie)&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/P/pointy-hat.html"&gt;pointy hat&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/R/rain-dance.html"&gt;rain dance&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/R/reaper.html"&gt;reaper&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/R/reincarnation--cycle-of.html"&gt;reincarnation, cycle of&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/R/religious-issues.html"&gt;religious issues&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/R/runes.html"&gt;runes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/S/sacred.html"&gt;sacred&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/S/smurf.html"&gt;smurf&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/S/spider.html"&gt;spider&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Sprite_(computer_graphics)"&gt;sprite&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/T/tentacle.html"&gt;tentacle&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/T/theology.html"&gt;theology&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;various uses of trees&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/U/urchin.html"&gt;urchin&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/V/voodoo-programming.html"&gt;voodoo programming&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;web&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/W/wheel.html"&gt;wheel&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/W/wizard.html"&gt;wizard&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/W/Wizard-Book.html"&gt;Wizard Book&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/W/wizard-hat.html"&gt;wizard hat&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/X/xyzzy.html"&gt;xyzzy&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Yggdrasil_Linux"&gt;yggdrasil&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/Z/zen.html"&gt;zen&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.catb.org/~esr/jargon/html/Z/zombie.html"&gt;zombie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
A similar list could be made of Lewis-Carrol references, or even Douglas Adams.&lt;/p&gt;</description><category>computers</category><category>geek</category><category>hacking</category><category>observation</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/04/04/mystical-jargon.html</guid><pubDate>Tue, 04 Apr 2006 03:26:03 GMT</pubDate></item><item><title>Crashed Linux</title><link>http://milosophical.me/blog/2006/03/24/crashed-linux.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.blogspot.com.au/2006_03_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
  on 24 March 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;a title="photo sharing" href="http://www.flickr.com/photos/milliped/116393699/"&gt;&lt;img src="http://static.flickr.com/50/116393699_612744e4f7_m.jpg" alt=""&gt;&lt;/a&gt;
&lt;a href="http://www.flickr.com/photos/milliped/116393699/"&gt;Crashed Linux&lt;/a&gt;


&lt;br&gt;

&lt;p&gt;
Originally uploaded by &lt;a href="http://www.flickr.com/people/milliped/"&gt;milliped&lt;/a&gt;.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
This is a pretty neat shot of the in-flight entertainment system on an &lt;a href="http://en.wikipedia.org/wiki/Airbus_A330"&gt;Airbus A330&lt;/a&gt; having a boot-up issue. Note, the kernel is Linux.
&lt;/p&gt;

&lt;br&gt;


&lt;p&gt;
This photo has a big rant in the flickr comments about whether or not it's a Linux crash. Well, what's a Linux crash? Most of the public Windows crashes do not involve the Windows kernel (except for blue-screens) but they get called Windows crashes. So, to be fair, this is a Linux crash, even if it appears that the kernel itself is fine.&lt;/p&gt;</description><category>aircraft</category><category>geek</category><category>linux</category><category>observation</category><category>screenshot</category><guid>http://milosophical.me/blog/2006/03/24/crashed-linux.html</guid><pubDate>Fri, 24 Mar 2006 03:11:22 GMT</pubDate></item><item><title>“Free as in Coke”</title><link>http://milosophical.me/blog/2006/02/10/free-as-in-coke.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally posted
    at &lt;a href="http://sinewalker.blogspot.com.au/2006_02_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
    on 10 February 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Was thinking about the &lt;a href="http://www.gnu.org/philosophy/philosophy.html"&gt;Free as in Freedom&lt;/a&gt;, vs Free as in Beer analogy and I found a problem with the Free as in Beer offering.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Beer is actually already nearly Free as in Freedom, since the process to produce your own beer, and many good recipes are public domain. So maybe the analogy should be “free as in Coke™”. This works better, because someone can give away Coke bottles full of CocaCola™, and this is not the same as being given the secret recipe to make your own Coke.
&lt;/p&gt;


&lt;br&gt;

&lt;p&gt;
Just a thought, anyway.&lt;/p&gt;</description><category>freedom</category><category>observation</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/02/10/free-as-in-coke.html</guid><pubDate>Thu, 09 Feb 2006 23:31:00 GMT</pubDate></item><item><title>Alaska could learn from Massachusetts</title><link>http://milosophical.me/blog/2006/01/24/alaska-could-learn-from-massachusetts.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally posted
    at &lt;a href="http://sinewalker.blogspot.com.au/2006_01_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
    on 24 January 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;
&lt;em&gt;In reference
  to &lt;a href="http://politics.slashdot.org/article.pl?sid=06/01/24/2014215"&gt;this
    Slashdot article&lt;/a&gt;about Diebold electronic voting data availability.&lt;/em&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Adopting Open voting/documententation standards would curtail
these sorts of issues, without the FUD of forcing constituents to switch…
However, I think that blaming it on Diebold is only a scape-goat to hide
corruption in the voting system, so it's likely to remain…&lt;/p&gt;</description><category>freedom</category><category>observation</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/01/24/alaska-could-learn-from-massachusetts.html</guid><pubDate>Tue, 24 Jan 2006 03:49:00 GMT</pubDate></item><item><title>“Get into the habbit of reading source docs”</title><link>http://milosophical.me/blog/2005/10/27/get-into-the-habbit-of-reading-source-docs.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally published
    at &lt;a href="http://sinewalker.blogspot.com.au/2005_10_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
          on 27 October 2005&lt;/em&gt;&lt;/p&gt;

      &lt;hr&gt;
      

&lt;blockquote&gt;&lt;em&gt; The great thing about Linux is that all the definitive
documentation (including the source code) comes with the OS. &lt;/em&gt;&lt;/blockquote&gt;
&lt;p&gt;
(&lt;a href="http://books.slashdot.org/comments.pl?sid=166454&amp;amp;threshold=-1&amp;amp;commentsort=0&amp;amp;mode=thread&amp;amp;cid=13883477"&gt;Slashdot quote&lt;/a&gt;)
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
You know, I'm finding that for a lot of the “beginner” linux distro's, this is
not true.  Yes, the source is &lt;em&gt;available&lt;/em&gt; but it doesn't &lt;em&gt;come with
the OS&lt;/em&gt;.&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Granted, not everyone wants to fill their harddrives with source tarballs or
SRPMs on the off chance they might want to read them, but only a few distro's I
know come with source, and those are not necessarily for noob's. the main
example that comes to mind is Gentoo (since it's a “ports”-like
distribution). This is not to wax lyrical on the benefits of Gentoo for
learning Linux (Gentoo has many weaknesses in that regard too, among its
inappropriateness as a general OS for noob's), just that it's the only one I've
found where the source &lt;em&gt;comes with the OS&lt;/em&gt;.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Other distro's with source “available” are Debian and Fedora (on extra CDs you
have to download, and Fedora locks the source into SRPMs which is another
learning hurdle to leap over, especially bad if all you want to do is read the
source comments, or documentation not included in the binary RPM). It makes me
feel like a 2nd-class citizen, that the source is somehow “open” but you have
to know the secret handshake to get at it.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
All of this, just to say: while reading source docs is a laudable habbit and I
share your wish to encourage it, I can also see how it is difficult for most
Linux noob's to form this habbit so long as the source doesn't actually come
with the OS, which for a great many distro's it does not. The extra steps to
download (and in many cases extract from SRPMs) the source are probably enough
of a deterrent to forming this habit.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
unfortunately, hacker habbits require hacker motivation :-(
&lt;/p&gt;
</description><category>code</category><category>gentoo</category><category>hacking</category><category>observation</category><category>package</category><category>thoughts</category><guid>http://milosophical.me/blog/2005/10/27/get-into-the-habbit-of-reading-source-docs.html</guid><pubDate>Thu, 27 Oct 2005 00:22:00 GMT</pubDate></item><item><title>Mainframe is process-centred, *nix/windoze is not</title><link>http://milosophical.me/blog/2005/07/18/mainframe-is-process-centred-nixwindoze-is-not.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally published
    at &lt;a href="http://sinewalker.blogspot.com.au/2005_07_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt; on 18 July 2005&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;
&lt;em&gt;In reference
  to &lt;a href="http://ask.slashdot.org/article.pl?sid=05/07/18/2035235&amp;amp;tid=190"&gt;this Slashdot question&lt;/a&gt; about Mainframe Culture&lt;/em&gt;
&lt;/p&gt;
&lt;br&gt;    
&lt;p&gt;Appart from the obvious religious stuff about GUI (or lack of) and
user-centred interfaces (or lack of), the biggest difference, and the biggest
advantage that Mainframe brings is it's culture of process and change
control. It is something you should strive to let your Mainframe masters pass
on to the *nix/windoze padawans before they die of old age.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
I am a *nix padawan, but, crocky technology asside, I'm frequently impressed by
my Mainframe elders, their ability to deploy code to Production environments
that works *the first time* nearly every time, and their ability to
communictate technical changes necessary to fix broken code in the middle of
the night in the 0.1% of cases where they failed to get it working first time.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Key values that I have picked up from my masters, and which should be
inherrited by both *nix and PC/Mac enclaves are focused around Engineering
principles. Mainframe guru's program like a civil engineer builds a bridge. No
shortcuts are taken unless it can be proven that it is safe to do so. Testing
is carried out in stages and test results must be submitted with the change
request before a program migrates to Production. If a program must “abend”
(Abnormal End) then it should do so noisily and with as much information as
possible. If it finishes cleanly, little information is needed other than this
fact.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
These closely follow the
advice &lt;a href="http://www.catb.org/%7Eesr/"&gt;Raymond&lt;/a&gt; has encoded
in &lt;a href="http://www.catb.org/%7Eesr/writings/taoup/html/"&gt;his book&lt;/a&gt;, but
there is probably much more that your Mainframe gurus know that you should
cherrish and extend to your newer team members.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Forget about the religious wars, the technology changes and the “focus” of your
programmers on users or other programmers. Get the real truth from your
Mainframe masters who have seen it all pass before them but have learned the
hard way how to make a stable computer environment that stays up, even on
cruddy mainframe technology. If their attitudes were adopted by people fluent
in today's fantastic systems, all people would benefit.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
The sad fact is that, in today's environment, especially after the dot-com
cowboys set Upper Management expectations, following Process is just too slow,
or too expensive. Convincing management that a bigger cost up front will result
in a lower cost in the long run is also futile when mgt sees it as “normal” for
computer systems to break. After all, their Windows machine on their desk has
been doing that for 20 years now, so it must be normal, right?
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
What matters most to managers or clients when deploying new systems these days
seems to be “time to market”, and the only consent to quality is that the IT
dept/company follows check-list processes like CMMI or ISO9000 which do not
address the real issues and put too much into the Process rather than the
Result. Also, when the system breaks, it's typically at the expense of the IT
company that built it, or was stupid enough to agree to use the off-the-shelf
product in the first place, so there is nothing to drive a change of behaviour
from the clients.&lt;/p&gt;

</description><category>Unix</category><category>development</category><category>hacking</category><category>mainframe</category><category>observation</category><category>process</category><category>stability</category><guid>http://milosophical.me/blog/2005/07/18/mainframe-is-process-centred-nixwindoze-is-not.html</guid><pubDate>Sun, 17 Jul 2005 22:52:00 GMT</pubDate></item></channel></rss>