<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Milosophical Me (java)</title><link>http://milosophical.me/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://milosophical.me/tags/java.xml"></atom:link><language>en</language><lastBuildDate>Mon, 12 Sep 2016 06:20:55 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Fixing Java CA Certificates on openSUSE</title><link>http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently switched back to openSUSE after a brief stint with Ubuntu. I guess you need to try other things out to know how good you have it, eh?  Anyway, I'm playing with &lt;a href="https://github.com/technomancy/leiningen" title="Leiningen build tool for Clojure"&gt;Leiningen&lt;/a&gt; and &lt;a href="https://github.com/quil/quil" title="Quil Clojure wrapper for Processing"&gt;Quil&lt;/a&gt;, but for some reason or other, I could not get Leiningen to self-install, because of an exception:
&lt;/p&gt;&lt;pre style="text-align:center;"&gt;java.security.KeyStoreException: problem accessing trust storejava.io.IOException: Invalid keystore format&lt;/pre&gt;
&lt;p&gt;
It turns out that the java keystore is somehow corrupt on OpenJDK / openSUSE 12.3. Not sure who's at fault, but here's how to fix it.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>certificates</category><category>fix</category><category>hacking</category><category>java</category><category>openSUSE</category><guid>http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html</guid><pubDate>Fri, 24 May 2013 04:03:15 GMT</pubDate></item><item><title>Java virtual memory limits again</title><link>http://milosophical.me/blog/2012/07/31/java-virtual-memory-limits-again-2.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;p&gt;I think I can finally put &lt;a title="32-bit Windows and JVM virtual memory limit" href="http://sinewalker.wordpress.com/2007/03/04/32-bit-windows-and-jvm-virtual-memory-limit"&gt;this old walnut&lt;/a&gt; to bed, having just updated it with some observations made by guru's of Stack Overflow. Hooray, only took me four years :-P&lt;/p&gt;</description><category>hacking</category><category>java</category><category>virtual memory</category><category>windows</category><guid>http://milosophical.me/blog/2012/07/31/java-virtual-memory-limits-again-2.html</guid><pubDate>Tue, 31 Jul 2012 02:50:57 GMT</pubDate></item><item><title>Java 7 is here - but it's lacking the dolphin's grace</title><link>http://milosophical.me/blog/2011/08/09/java-7-lacking-the-dolphins-grace.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Well, after 5 years and the setting of the Sun, Java SE 1.7 (originally code-named "dolphin") has finally been released. Joyous celebrations from the land of Duke.&lt;/p&gt;


&lt;p&gt;&lt;a href="http://milosophical.me/blog/2011/08/09/java-7-lacking-the-dolphins-grace.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hacking</category><category>java</category><category>rant</category><guid>http://milosophical.me/blog/2011/08/09/java-7-lacking-the-dolphins-grace.html</guid><pubDate>Tue, 09 Aug 2011 12:38:54 GMT</pubDate></item><item><title>Java concurrency links</title><link>http://milosophical.me/blog/2010/05/31/java-concurrency-links.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;There is lots of information on the Web about concurrent programming with Java (or with other languages on the JVM). This post is a list of links I have found helpful and/or interesting.
&lt;/p&gt;&lt;ul&gt;
	&lt;li&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2010/05/31/java-concurrency-links.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><category>clojure</category><category>concurrency</category><category>concurrent programming</category><category>hacking</category><category>java</category><category>jvm</category><category>multi-core</category><category>multi-threading</category><category>programming</category><category>threads</category><guid>http://milosophical.me/blog/2010/05/31/java-concurrency-links.html</guid><pubDate>Mon, 31 May 2010 12:44:38 GMT</pubDate></item><item><title>Switching to Java JDK 6u10</title><link>http://milosophical.me/blog/2008/10/30/switching-to-java-jdk-6u10.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been using 6u10 beta for a while and keeping 6u3 as my main JDK. It's also the default JDK for NetBeans but now that update 10 of &lt;em&gt;Mustang &lt;/em&gt;is out of beta, it's time for me to ditch 6u3 and swtich to 6u10 final.
&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/10/30/switching-to-java-jdk-6u10.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hacking</category><category>java</category><category>netbeans</category><category>tip</category><guid>http://milosophical.me/blog/2008/10/30/switching-to-java-jdk-6u10.html</guid><pubDate>Wed, 29 Oct 2008 22:52:21 GMT</pubDate></item><item><title>"generic" types: what's in a name?</title><link>http://milosophical.me/blog/2008/09/10/generic-types-whats-in-a-name.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been stumbling over Java's generic types for a while now... I think I
finally understand what my problem is:
&lt;/p&gt;
&lt;br&gt;
&lt;p style="text-align:center;"&gt;They should be called &lt;strong&gt;specific &lt;/strong&gt;types, or &lt;em&gt;&lt;span&gt;parametrised&lt;/span&gt;&lt;/em&gt;-&lt;em&gt;collections&lt;/em&gt;!&lt;/p&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/09/10/generic-types-whats-in-a-name.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>duh</category><category>generics</category><category>jargon</category><category>java</category><category>OOP</category><category>terminology</category><category>thoughts</category><guid>http://milosophical.me/blog/2008/09/10/generic-types-whats-in-a-name.html</guid><pubDate>Wed, 10 Sep 2008 04:00:37 GMT</pubDate></item><item><title>Project: Dvorcode</title><link>http://milosophical.me/blog/2008/08/15/project-dvorcode.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I've just finished hacking together a simple little program to transcode my "dvorcodes" for when entering on a QWERTY keyboard. I've created a new &lt;a title="Dvorcode project summary page on SourceForge" href="http://sourceforge.net/projects/dvorcode/"&gt;project on SourceForge&lt;/a&gt; and I've uploaded the code and a pair of pre-compiled executable JARs (one for Java 5 and also a re-worked version that's been tested on Java 1.4.2).


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/08/15/project-dvorcode.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>dvorak</category><category>hacking</category><category>java</category><category>passwords</category><category>projects</category><guid>http://milosophical.me/blog/2008/08/15/project-dvorcode.html</guid><pubDate>Thu, 14 Aug 2008 23:50:31 GMT</pubDate></item><item><title>Compiling JNLP projects under stock NetBeans 6.x</title><link>http://milosophical.me/blog/2008/04/30/compiling-jnlp-projects-under-stock-netbeans-6x.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;This is a pretty simple issue that was easy to solve but took a bit of fumbling around...

&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
I recently checked out the new Java &lt;a title="SwingSet3 demo project on dev.java.net" href="https://swingset3.dev.java.net/"&gt;SwingSet3&lt;/a&gt; project from it's &lt;a title="browse SwingSet3 Subversion repository" href="https://swingset3.dev.java.net/source/browse/swingset3/"&gt;SVN repo&lt;/a&gt;, to play around with it. It's a NetBeans project so it was simple enough to fire up NetBeans 6.0 and use it's built-in &lt;a title="NetBeans' Subversion documentation" href="http://subversion.netbeans.org/"&gt;Subversion support&lt;/a&gt; to check the project out from the repository directly...
&lt;/p&gt;
&lt;br&gt;


&lt;p&gt;
My plan was very simple: check out the code with NetBeans, build it, run it (using JDK 1.6.0_10 beta for the new Nimbus look/feel too) and then hack at the code.
&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/04/30/compiling-jnlp-projects-under-stock-netbeans-6x.html"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hacking</category><category>java</category><category>tip</category><guid>http://milosophical.me/blog/2008/04/30/compiling-jnlp-projects-under-stock-netbeans-6x.html</guid><pubDate>Wed, 30 Apr 2008 00:40:23 GMT</pubDate></item><item><title>Essentials to make Windows almost bareable</title><link>http://milosophical.me/blog/2007/06/07/essential-tools-to-make-windows-almost-bareable.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Okay, so I hate working in Windows, but on my employer's equipment at least, I must live with it. After having had this machine replaced twice (faulty Dell hardware) and rebuilt more times than I can remember (Windows BSODs), for a total of at least 3 system migrations this past year, I thought I'd better keep a list of what free software to install on top of Windows, and what adjustments to make, so that at least I don't feel like I'm wearing a straight jacket.  Here goes:


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2007/06/07/essential-tools-to-make-windows-almost-bareable.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cygwin</category><category>Delicious</category><category>dvorak</category><category>emacs</category><category>hacking</category><category>how-to</category><category>java</category><category>jEdit</category><category>lisp</category><category>media</category><category>Microsoft</category><category>shell</category><guid>http://milosophical.me/blog/2007/06/07/essential-tools-to-make-windows-almost-bareable.html</guid><pubDate>Wed, 06 Jun 2007 23:16:44 GMT</pubDate></item><item><title>Setting up multiple Java VMs under Cygwin</title><link>http://milosophical.me/blog/2007/03/09/setting-up-multiple-java-vms-under-cygwin.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;It is useful to have different versions of the JVM installed, for a number of reasons:
&lt;/p&gt;&lt;ul&gt;
	&lt;li&gt;Different optimisation features from different JVM implementations&lt;/li&gt;
	&lt;li&gt;Different language features from different JVM versions&lt;/li&gt;
	&lt;li&gt;Java classes compiled with “&lt;em&gt;Tiger&lt;/em&gt;” won't run in “&lt;em&gt;Mantis&lt;/em&gt;”…&lt;/li&gt;
&lt;/ul&gt;

It is also useful to be able to quickly switch between installed JREs/JDKs depending on the task at hand.



If I'm hacking in Linux, the &lt;a title="JPackage home page" href="http://milosophical.me/blog/2007/03/09/www.jpackage.org"&gt;JPackage&lt;/a&gt; project provides a much &lt;a title="JPackage's install/location/naming policy facilitates use of the udate-alternative mechanism" href="http://www.jpackage.org/policy.php"&gt;nicer &lt;/a&gt;&lt;a title="Debian's update-alternatives solution explained" href="http://www.debian.org/doc/debian-policy/ap-pkg-alternatives.html"&gt;solution &lt;/a&gt;to this problem, and the Linux distro' I'm using (SUSE 10.0) &lt;a title="Instruction for installing Java on openSUSE" href="http://en.opensuse.org/Installing_Sun's_Java_on_SUSE_Linux"&gt;uses JPackage&lt;/a&gt;. It'd be nice if there was an &lt;code&gt;update-alternatives&lt;/code&gt; for Cygwin, but since there isn't I've come up with this hack.



&lt;p&gt;&lt;a href="http://milosophical.me/blog/2007/03/09/setting-up-multiple-java-vms-under-cygwin.html"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>alternatives</category><category>code</category><category>cygwin</category><category>hacking</category><category>java</category><category>shell</category><category>sloshes</category><guid>http://milosophical.me/blog/2007/03/09/setting-up-multiple-java-vms-under-cygwin.html</guid><pubDate>Thu, 08 Mar 2007 21:21:02 GMT</pubDate></item></channel></rss>