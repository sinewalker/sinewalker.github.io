<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Milosophical Me (observation)</title><link>http://milosophical.me/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://milosophical.me/tags/observation.xml"></atom:link><language>en</language><lastBuildDate>Thu, 03 Nov 2016 03:11:26 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Back to openSUSE</title><link>http://milosophical.me/blog/2008/03/31/back-to-opensuse.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Well, my stint in *buntu is over, and it ends with an award to openSUSE: this is the first Linux distro I've returned to.


Kubuntu is nice, and I'm happy that I've tried it out, but it's not for me. It's nice enough if you want a simple desktop system, and APT rocks (especially with the aptitude front-end). But it's just not as good as openSUSE, sorry.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/03/31/back-to-opensuse.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>alternatives</category><category>computers</category><category>hacking</category><category>kubuntu</category><category>observation</category><category>rant</category><category>SUSE</category><category>thoughts</category><guid>http://milosophical.me/blog/2008/03/31/back-to-opensuse.html</guid><pubDate>Sun, 30 Mar 2008 22:44:49 GMT</pubDate></item><item><title>Preserving the programming craft</title><link>http://milosophical.me/blog/2006/05/01/preserving-the-programming-craft.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.wordpress.com/2006/05/01/preserving-the-programming-craft/"&gt;sinewalker.wordpress.com&lt;/a&gt;
  on 1 May 2006.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;I
  posted &lt;a href="http://ask.slashdot.org/comments.pl?sid=184329&amp;amp;cid=15234982"&gt;this
    reply &lt;/a&gt;to an Ask
  Slashdot:  &lt;a href="http://ask.slashdot.org/article.pl?sid=06/04/28/2236239"&gt;Do
    Kids still program?&lt;/a&gt; I found myself commenting all over that thread… it
  must be close to my heart :-) Reproducing here, and exploring a little
  further.&lt;/p&gt;

&lt;br&gt;


&lt;p&gt;
Many of the observations made on Slashdot are right. I wonder what it is that
drives me to hack, that is missing from what is covered? Why do I like to hack,
and why would it be passed over by kids these days? Or would it?
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;&lt;a href="http://milosophical.me/blog/2006/05/01/preserving-the-programming-craft.html"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hacking</category><category>observation</category><category>programming</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/05/01/preserving-the-programming-craft.html</guid><pubDate>Mon, 01 May 2006 05:00:21 GMT</pubDate></item><item><title>Mystical jargon</title><link>http://milosophical.me/blog/2006/04/04/mystical-jargon.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.wordpress.com/2006/04/04/mystical-jargon/"&gt;sinewalker.wordpress.com&lt;/a&gt;
  on 4 April 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;I'm sure this observation has been made elsewhere, but I can't find reference to it online.&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Have you ever noticed the prolific use of mystical/fantastical words in computer jargon? I'm sure there is a significance, or at least a tongue-in-cheek pointing to the wizardly ways of early and contemporary computer experts.  It is funny I suppose, and when you look at how wide-spread it is, it may be revealing of the hacker psych.&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;&lt;a href="http://milosophical.me/blog/2006/04/04/mystical-jargon.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>computers</category><category>geek</category><category>hacking</category><category>observation</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/04/04/mystical-jargon.html</guid><pubDate>Tue, 04 Apr 2006 03:26:03 GMT</pubDate></item><item><title>Crashed Linux</title><link>http://milosophical.me/blog/2006/03/24/crashed-linux.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.blogspot.com.au/2006_03_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
  on 24 March 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;
This is a pretty neat shot of the in-flight entertainment system on an &lt;a href="http://en.wikipedia.org/wiki/Airbus_A330"&gt;Airbus A330&lt;/a&gt; having a boot-up issue. Note, the kernel is Linux.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;&lt;a title="photo sharing" href="http://www.flickr.com/photos/milliped/116393699/"&gt;&lt;img src="http://static.flickr.com/50/116393699_612744e4f7_m.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="http://www.flickr.com/photos/milliped/116393699/"&gt;Crashed Linux&lt;/a&gt;


&lt;br&gt;

&lt;p&gt;
Originally uploaded by &lt;a href="http://www.flickr.com/people/milliped/"&gt;milliped&lt;/a&gt;.
&lt;/p&gt;

&lt;br&gt;

&lt;br&gt;


&lt;p&gt;
This photo has a big rant in the flickr comments about whether or not it's a Linux crash. Well, what's a Linux crash? Most of the public Windows crashes do not involve the Windows kernel (except for blue-screens) but they get called Windows crashes. So, to be fair, this is a Linux crash, even if it appears that the kernel itself is fine.&lt;/p&gt;</description><category>aircraft</category><category>geek</category><category>linux</category><category>observation</category><category>screenshot</category><guid>http://milosophical.me/blog/2006/03/24/crashed-linux.html</guid><pubDate>Fri, 24 Mar 2006 03:11:22 GMT</pubDate></item><item><title>“Free as in Coke”</title><link>http://milosophical.me/blog/2006/02/10/free-as-in-coke.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally posted
    at &lt;a href="http://sinewalker.blogspot.com.au/2006_02_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
    on 10 February 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Was thinking about the &lt;a href="http://www.gnu.org/philosophy/philosophy.html"&gt;Free as in Freedom&lt;/a&gt;, vs Free as in Beer analogy and I found a problem with the Free as in Beer offering.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Beer is actually already nearly Free as in Freedom, since the process to produce your own beer, and many good recipes are public domain. So maybe the analogy should be “free as in Coke™”. This works better, because someone can give away Coke bottles full of CocaCola™, and this is not the same as being given the secret recipe to make your own Coke.
&lt;/p&gt;


&lt;br&gt;

&lt;p&gt;
Just a thought, anyway.&lt;/p&gt;</description><category>freedom</category><category>observation</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/02/10/free-as-in-coke.html</guid><pubDate>Thu, 09 Feb 2006 23:31:00 GMT</pubDate></item><item><title>Alaska could learn from Massachusetts</title><link>http://milosophical.me/blog/2006/01/24/alaska-could-learn-from-massachusetts.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally posted
    at &lt;a href="http://sinewalker.blogspot.com.au/2006_01_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
    on 24 January 2006.&lt;/em&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;
&lt;em&gt;In reference
  to &lt;a href="http://politics.slashdot.org/article.pl?sid=06/01/24/2014215"&gt;this
    Slashdot article&lt;/a&gt;about Diebold electronic voting data availability.&lt;/em&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Adopting Open voting/documententation standards would curtail
these sorts of issues, without the FUD of forcing constituents to switch…
However, I think that blaming it on Diebold is only a scape-goat to hide
corruption in the voting system, so it's likely to remain…&lt;/p&gt;</description><category>freedom</category><category>observation</category><category>thoughts</category><guid>http://milosophical.me/blog/2006/01/24/alaska-could-learn-from-massachusetts.html</guid><pubDate>Tue, 24 Jan 2006 03:49:00 GMT</pubDate></item><item><title>“Get into the habbit of reading source docs”</title><link>http://milosophical.me/blog/2005/10/27/get-into-the-habbit-of-reading-source-docs.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally published
    at &lt;a href="http://sinewalker.blogspot.com.au/2005_10_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt;
          on 27 October 2005&lt;/em&gt;&lt;/p&gt;

      &lt;hr&gt;
      

&lt;blockquote&gt;&lt;em&gt; The great thing about Linux is that all the definitive
documentation (including the source code) comes with the OS. &lt;/em&gt;&lt;/blockquote&gt;
&lt;p&gt;
(&lt;a href="http://books.slashdot.org/comments.pl?sid=166454&amp;amp;threshold=-1&amp;amp;commentsort=0&amp;amp;mode=thread&amp;amp;cid=13883477"&gt;Slashdot quote&lt;/a&gt;)
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
You know, I'm finding that for a lot of the “beginner” linux distro's, this is
not true.  Yes, the source is &lt;em&gt;available&lt;/em&gt; but it doesn't &lt;em&gt;come with
the OS&lt;/em&gt;.&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Granted, not everyone wants to fill their harddrives with source tarballs or
SRPMs on the off chance they might want to read them, but only a few distro's I
know come with source, and those are not necessarily for noob's. the main
example that comes to mind is Gentoo (since it's a “ports”-like
distribution). This is not to wax lyrical on the benefits of Gentoo for
learning Linux (Gentoo has many weaknesses in that regard too, among its
inappropriateness as a general OS for noob's), just that it's the only one I've
found where the source &lt;em&gt;comes with the OS&lt;/em&gt;.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Other distro's with source “available” are Debian and Fedora (on extra CDs you
have to download, and Fedora locks the source into SRPMs which is another
learning hurdle to leap over, especially bad if all you want to do is read the
source comments, or documentation not included in the binary RPM). It makes me
feel like a 2nd-class citizen, that the source is somehow “open” but you have
to know the secret handshake to get at it.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
All of this, just to say: while reading source docs is a laudable habbit and I
share your wish to encourage it, I can also see how it is difficult for most
Linux noob's to form this habbit so long as the source doesn't actually come
with the OS, which for a great many distro's it does not. The extra steps to
download (and in many cases extract from SRPMs) the source are probably enough
of a deterrent to forming this habit.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
unfortunately, hacker habbits require hacker motivation :-(
&lt;/p&gt;
</description><category>code</category><category>gentoo</category><category>hacking</category><category>observation</category><category>package</category><category>thoughts</category><guid>http://milosophical.me/blog/2005/10/27/get-into-the-habbit-of-reading-source-docs.html</guid><pubDate>Thu, 27 Oct 2005 00:22:00 GMT</pubDate></item><item><title>Mainframe is process-centred, *nix/windoze is not</title><link>http://milosophical.me/blog/2005/07/18/mainframe-is-process-centred-nixwindoze-is-not.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;p&gt;&lt;em&gt;This post was originally published
    at &lt;a href="http://sinewalker.blogspot.com.au/2005_07_01_archive.html"&gt;sinewalker.blogspot.com.au&lt;/a&gt; on 18 July 2005&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;
&lt;em&gt;In reference
  to &lt;a href="http://ask.slashdot.org/article.pl?sid=05/07/18/2035235&amp;amp;tid=190"&gt;this Slashdot question&lt;/a&gt; about Mainframe Culture&lt;/em&gt;
&lt;/p&gt;
&lt;br&gt;    
&lt;p&gt;Appart from the obvious religious stuff about GUI (or lack of) and
user-centred interfaces (or lack of), the biggest difference, and the biggest
advantage that Mainframe brings is it's culture of process and change
control. It is something you should strive to let your Mainframe masters pass
on to the *nix/windoze padawans before they die of old age.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
I am a *nix padawan, but, crocky technology asside, I'm frequently impressed by
my Mainframe elders, their ability to deploy code to Production environments
that works *the first time* nearly every time, and their ability to
communictate technical changes necessary to fix broken code in the middle of
the night in the 0.1% of cases where they failed to get it working first time.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Key values that I have picked up from my masters, and which should be
inherrited by both *nix and PC/Mac enclaves are focused around Engineering
principles. Mainframe guru's program like a civil engineer builds a bridge. No
shortcuts are taken unless it can be proven that it is safe to do so. Testing
is carried out in stages and test results must be submitted with the change
request before a program migrates to Production. If a program must “abend”
(Abnormal End) then it should do so noisily and with as much information as
possible. If it finishes cleanly, little information is needed other than this
fact.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
These closely follow the
advice &lt;a href="http://www.catb.org/%7Eesr/"&gt;Raymond&lt;/a&gt; has encoded
in &lt;a href="http://www.catb.org/%7Eesr/writings/taoup/html/"&gt;his book&lt;/a&gt;, but
there is probably much more that your Mainframe gurus know that you should
cherrish and extend to your newer team members.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
Forget about the religious wars, the technology changes and the “focus” of your
programmers on users or other programmers. Get the real truth from your
Mainframe masters who have seen it all pass before them but have learned the
hard way how to make a stable computer environment that stays up, even on
cruddy mainframe technology. If their attitudes were adopted by people fluent
in today's fantastic systems, all people would benefit.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
The sad fact is that, in today's environment, especially after the dot-com
cowboys set Upper Management expectations, following Process is just too slow,
or too expensive. Convincing management that a bigger cost up front will result
in a lower cost in the long run is also futile when mgt sees it as “normal” for
computer systems to break. After all, their Windows machine on their desk has
been doing that for 20 years now, so it must be normal, right?
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
What matters most to managers or clients when deploying new systems these days
seems to be “time to market”, and the only consent to quality is that the IT
dept/company follows check-list processes like CMMI or ISO9000 which do not
address the real issues and put too much into the Process rather than the
Result. Also, when the system breaks, it's typically at the expense of the IT
company that built it, or was stupid enough to agree to use the off-the-shelf
product in the first place, so there is nothing to drive a change of behaviour
from the clients.&lt;/p&gt;

</description><category>development</category><category>hacking</category><category>mainframe</category><category>observation</category><category>process</category><category>stability</category><category>Unix</category><guid>http://milosophical.me/blog/2005/07/18/mainframe-is-process-centred-nixwindoze-is-not.html</guid><pubDate>Sun, 17 Jul 2005 22:52:00 GMT</pubDate></item></channel></rss>