<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Milosophical Me (Posts about code)</title><link>http://milosophical.me/</link><description></description><atom:link href="http://milosophical.me/tags/code.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 11 Jun 2017 22:05:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using Emacs' EasyPG in text terminals</title><link>http://milosophical.me/blog/2011/03/17/using-emacs-easypg-in-text-terminals.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;There is a bug in the integration between Emacs' EasyPG and the "new" GnuPG2 that causes Emacs to not load &lt;code&gt;.gpg&lt;/code&gt; files when running in a text terminal.  It's being worked on, apparently, but in the mean-time, here is how to fix it.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2011/03/17/using-emacs-easypg-in-text-terminals.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>easypg</category><category>emacs</category><category>gnupg</category><category>hack</category><category>hacking</category><guid>http://milosophical.me/blog/2011/03/17/using-emacs-easypg-in-text-terminals.html</guid><pubDate>Thu, 17 Mar 2011 05:04:59 GMT</pubDate></item><item><title>NetBeans 6.5 and Python</title><link>http://milosophical.me/blog/2008/11/24/netbeans-65-and-python.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a title="NetBeans 6.5 release page" href="http://www.netbeans.org/community/releases/65/"&gt;NetBeans 6.5 is out&lt;/a&gt;! You can &lt;a title="Using Nimbus with NetBeans 6.5 -- noice!" href="http://mrhaki.blogspot.com/2008/11/start-netbeans-65-with-nimbus-look-and.html"&gt;run it with the&lt;/a&gt; &lt;a title="The Nimbus L&amp;amp;F project page" href="https://nimbus.dev.java.net/"&gt;Nimbus look and feel&lt;/a&gt; too! There's also an &lt;a title="NetBeans 6.5 Python -- Early Access" href="http://www.netbeans.org/features/python/index.html"&gt;Early Access plugin for Python&lt;/a&gt;. All very nice.
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
I recently had occasion to play with some Python at work (a small script to do some configurations, and I didn't want to do them in bash), so I took the time to get all of this set up. It's all so very easy and not worth writing about. However I thought that the i&lt;a title="NetBeans' integrated Jython debugger" href="http://wiki.netbeans.org/Python#section-Python-Debugger"&gt;nteractive debugger&lt;/a&gt; (which is &lt;em&gt;awesome&lt;/em&gt;, btw) has a small issue that needs resolving. Mean-time, here's a work-around.
&lt;/p&gt;


&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/11/24/netbeans-65-and-python.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>hacking</category><category>netbeans</category><category>python</category><category>tip</category><guid>http://milosophical.me/blog/2008/11/24/netbeans-65-and-python.html</guid><pubDate>Mon, 24 Nov 2008 01:08:42 GMT</pubDate></item><item><title>Stripping tags from ogg Vorbis files</title><link>http://milosophical.me/blog/2008/08/26/stripping-tags-from-ogg-vorbis-files.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I have a bunch of free &lt;a title="Xiph's meta container format for media" href="http://www.xiph.org/ogg/"&gt;Ogg&lt;/a&gt; &lt;a title="Patent-free audio codec (MP3 killer)" href="http://www.vorbis.com/"&gt;Vorbis&lt;/a&gt; audio files that I've downloaded from &lt;a title="Kahvi Collective. Sound has the power to make the world a better place" href="http://kahvi.org/"&gt;Kahvi.org&lt;/a&gt;. They're great! But recently they've been including cover art within the files, which breaks Windows Media Player (it can't handle the very long tags of binhex-coded JPGs).


Since I rather like WMP's integration in windows (keyboard shortcuts), and &lt;a title="Kewl KDE music player (iTunes killer)" href="http://amarok.kde.org/"&gt;Amarok&lt;/a&gt; &lt;a title="Amarok for win32 is still a work in progress, but it compiles..." href="http://amarok.kde.org/wiki/Development/Win32"&gt;isn't quite ready for win32&lt;/a&gt;, I thought I'd find a way to strip the troublesome tags from the data files rather than change to another player.



Here's a quick-and-dirty shell hack to remove the tags from the files and get them playable by daft players such as Windows Media Player



&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/08/26/stripping-tags-from-ogg-vorbis-files.html"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>audio</category><category>code</category><category>cygwin</category><category>hacking</category><category>tip</category><category>vorbis</category><guid>http://milosophical.me/blog/2008/08/26/stripping-tags-from-ogg-vorbis-files.html</guid><pubDate>Tue, 26 Aug 2008 06:05:34 GMT</pubDate></item><item><title>Pretty-printing XML with Emacs' NXML-mode</title><link>http://milosophical.me/blog/2008/06/26/pretty-printing-xml-with-emacs-nxml-mode.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Did you ever get a stream of XML out of a log file, or in a data stream, and it's all mashed together without line-breaks so that it just appears as gobble-de-gook? If there's a data error (not an XML parsing error) then you have to read it so that you can find where the error is, but you don't have XML-spy and NetBeans is overkill or takes forever to fire up...


Emacs to the rescue! &lt;a title="Benjamin Ferrari's blog (seems to lack an " href="http://blog.bookworm.at/"&gt;Benjamin Ferrari&lt;/a&gt; wrote this &lt;em&gt;increadibly useful&lt;/em&gt; (and simple) &lt;a title="Benjamin Ferrari's original blog post for below code" href="http://blog.bookworm.at/2007/03/pretty-print-xml-with-emacs.html"&gt;elisp function&lt;/a&gt; to pretty-print a block of XML code:

&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2008/06/26/pretty-printing-xml-with-emacs-nxml-mode.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;</description><category>code</category><category>emacs</category><category>geek</category><category>hacking</category><category>lisp</category><category>tip</category><category>XHTML</category><guid>http://milosophical.me/blog/2008/06/26/pretty-printing-xml-with-emacs-nxml-mode.html</guid><pubDate>Thu, 26 Jun 2008 02:46:03 GMT</pubDate></item><item><title>Finding DLLs used by a Cygwin program</title><link>http://milosophical.me/blog/2007/03/09/finding-dlls-used-by-a-cygwin-program.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I don't know how many other people get this issue, but it comes up at my work a bit: Some co-worker asks me if I know of a tool to do such-and-such, and invariably I think &lt;em&gt;“well, that's &lt;/em&gt;easy&lt;em&gt; to do on Unix, but on &lt;/em&gt;Windows&lt;em&gt;…”&lt;/em&gt;.


Then I remember Cygwin, and quickly find a Cygwin utility that does it, or can be scripted to do it with a small amount of work. So then co-worker asks if they can have a copy of this utility, and of course Cygwin is Free, so I say “sure, go download from &lt;a title="Cygwin download mirrors" href="http://www.cygwin.com/mirrors.html"&gt;www.cygwin.com&lt;/a&gt;.” Then they say, “yeah, but I don't want to install all of Cygwin, can't you just give me that one program?”



Well, the Cygwin command-line tools &lt;em&gt;can&lt;/em&gt; be run from a Windows &lt;code&gt;CMD.EXE&lt;/code&gt; shell, so this is quite possible to do. However, they all require the Cygwin POSIX layer, which at a minimum means I should also give them &lt;code&gt;cygwin1.dll&lt;/code&gt;. But what &lt;em&gt;other&lt;/em&gt; DLLs might the program use?



&lt;strong&gt;MJL2008-09-10T14:37+1000 Update:&lt;/strong&gt; since this page gets a lot of hits, here's the quick answer: &lt;strong&gt;use cygcheck&lt;/strong&gt;, i.e:

&lt;/p&gt;&lt;p style="text-align:center;"&gt;&lt;code&gt;cygcheck grep&lt;/code&gt;&lt;/p&gt;



Find it under Happy hacker discovery #2. Keep reading if you're bored...



&lt;p&gt;&lt;a href="http://milosophical.me/blog/2007/03/09/finding-dlls-used-by-a-cygwin-program.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>cygwin</category><category>hacking</category><guid>http://milosophical.me/blog/2007/03/09/finding-dlls-used-by-a-cygwin-program.html</guid><pubDate>Thu, 08 Mar 2007 22:14:25 GMT</pubDate></item><item><title>Setting up multiple Java VMs under Cygwin</title><link>http://milosophical.me/blog/2007/03/09/setting-up-multiple-java-vms-under-cygwin.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;It is useful to have different versions of the JVM installed, for a number of reasons:
&lt;/p&gt;&lt;ul&gt;
	&lt;li&gt;Different optimisation features from different JVM implementations&lt;/li&gt;
	&lt;li&gt;Different language features from different JVM versions&lt;/li&gt;
	&lt;li&gt;Java classes compiled with “&lt;em&gt;Tiger&lt;/em&gt;” won't run in “&lt;em&gt;Mantis&lt;/em&gt;”…&lt;/li&gt;
&lt;/ul&gt;

It is also useful to be able to quickly switch between installed JREs/JDKs depending on the task at hand.



If I'm hacking in Linux, the &lt;a title="JPackage home page" href="http://milosophical.me/blog/2007/03/09/www.jpackage.org"&gt;JPackage&lt;/a&gt; project provides a much &lt;a title="JPackage's install/location/naming policy facilitates use of the udate-alternative mechanism" href="http://www.jpackage.org/policy.php"&gt;nicer &lt;/a&gt;&lt;a title="Debian's update-alternatives solution explained" href="http://www.debian.org/doc/debian-policy/ap-pkg-alternatives.html"&gt;solution &lt;/a&gt;to this problem, and the Linux distro' I'm using (SUSE 10.0) &lt;a title="Instruction for installing Java on openSUSE" href="http://en.opensuse.org/Installing_Sun's_Java_on_SUSE_Linux"&gt;uses JPackage&lt;/a&gt;. It'd be nice if there was an &lt;code&gt;update-alternatives&lt;/code&gt; for Cygwin, but since there isn't I've come up with this hack.



&lt;p&gt;&lt;a href="http://milosophical.me/blog/2007/03/09/setting-up-multiple-java-vms-under-cygwin.html"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>alternatives</category><category>code</category><category>cygwin</category><category>hacking</category><category>java</category><category>shell</category><category>sloshes</category><guid>http://milosophical.me/blog/2007/03/09/setting-up-multiple-java-vms-under-cygwin.html</guid><pubDate>Thu, 08 Mar 2007 21:21:02 GMT</pubDate></item><item><title>Monospace fonts</title><link>http://milosophical.me/blog/2006/06/23/monospace-fonts.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I finally got fed up enough with Courier New to start searching for a legible, monospace font to use in jEdit. In Emacs, I'm particularly fond of the standard X font "misc-fixed" (though it's a little tough to tell appart O and 0 still). But for jEdit, the Java monospace font seems to map to Courier New in Windows, and to some God-awful font on Linux.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2006/06/23/monospace-fonts.html"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>fonts</category><category>hacking</category><category>jEdit</category><category>screenshot</category><guid>http://milosophical.me/blog/2006/06/23/monospace-fonts.html</guid><pubDate>Fri, 23 Jun 2006 03:01:13 GMT</pubDate></item><item><title>jEdit macros, vs. Emacs functions</title><link>http://milosophical.me/blog/2006/06/07/jedit-macros-vs-emacs-functions.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been playing with customising &lt;a title="The jEdit programmer's editor home page" href="http://www.jedit.org"&gt;jEdit&lt;/a&gt; a little bit, and decided to have a go at writing some simple date insertion macros.  These perform the same work as some old &lt;a title="A fairly good elisp tutorial." href="http://www.glug.org/people/ttn/software/elisp-tutorial/"&gt;elisp&lt;/a&gt; functions I wrote years ago in &lt;a title="GNU Emacs, the One True Way..." href="http://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt;, to insert date/time stamps in various formats.  In my &lt;code&gt;.emacs&lt;/code&gt; file, I bind these functions to short-cut keys, and then use them for updating Changelogs in code and in offline journal entries.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2006/06/07/jedit-macros-vs-emacs-functions.html"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>copyright</category><category>emacs</category><category>hacking</category><category>java</category><category>jEdit</category><category>lisp</category><guid>http://milosophical.me/blog/2006/06/07/jedit-macros-vs-emacs-functions.html</guid><pubDate>Wed, 07 Jun 2006 00:03:13 GMT</pubDate></item><item><title>Cygwin systray menu</title><link>http://milosophical.me/blog/2006/04/18/cygwin-systray-menu.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.wordpress.com/2006/04/18/cygwin-systray-menu/"&gt;sinewalker.wordpress.com&lt;/a&gt;
  on 18 April 2006.&lt;/em&gt;
&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;While I'm on the subject of Cygwin hacking, I discovered this man-page about the Cygwin X server: type &lt;code&gt;man XWinrc&lt;/code&gt; and read about how you can hack your systray icon to include a little launcher menu for you favorite X clients 8)
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="http://milosophical.me/blog/2006/04/18/cygwin-systray-menu.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>cygwin</category><category>hacking</category><guid>http://milosophical.me/blog/2006/04/18/cygwin-systray-menu.html</guid><pubDate>Tue, 18 Apr 2006 06:11:43 GMT</pubDate></item><item><title>Hacking emacsclient in cygwin</title><link>http://milosophical.me/blog/2006/04/18/hacking-emacsclient-in-cygwin.html</link><dc:creator>Michael Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;
&lt;em&gt;This post was originally published
  at &lt;a href="http://sinewalker.wordpress.com/2006/04/18/hacking-emacsclient-in-cygwin/"&gt;sinewalker.wordpress.com&lt;/a&gt;
  on 18 April 2006.&lt;/em&gt;
&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I don't know why I haven't ever got around to this, but here—finally—is a hack to have Cygwin only ever start one instance of emacs (especially important in cygwin, because Win32 does not appear to share program texts between processes… )
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;&lt;a href="http://milosophical.me/blog/2006/04/18/hacking-emacsclient-in-cygwin.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>cygwin</category><category>emacs</category><category>hacking</category><guid>http://milosophical.me/blog/2006/04/18/hacking-emacsclient-in-cygwin.html</guid><pubDate>Tue, 18 Apr 2006 05:57:29 GMT</pubDate></item></channel></rss>