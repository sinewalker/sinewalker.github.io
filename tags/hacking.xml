<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Milosophical Me (hacking)</title><link>http://milosophical.me/</link><description></description><language>en</language><lastBuildDate>Fri, 30 Jan 2015 22:57:21 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Fixing Java CA Certificates on openSUSE</title><link>http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently switched back to openSUSE after a brief stint with Ubuntu. I guess you need to try other things out to know how good you have it, eh?  Anyway, I'm playing with &lt;a href="https://github.com/technomancy/leiningen" title="Leiningen build tool for Clojure"&gt;Leiningen&lt;/a&gt; and &lt;a href="https://github.com/quil/quil" title="Quil Clojure wrapper for Processing"&gt;Quil&lt;/a&gt;, but for some reason or other, I could not get Leiningen to self-install, because of an exception:
&lt;/p&gt;&lt;pre style="text-align:center;"&gt;java.security.KeyStoreException: problem accessing trust storejava.io.IOException: Invalid keystore format&lt;/pre&gt;

It turns out that the java keystore is somehow corrupt on OpenJDK / openSUSE 12.3. Not sure who's at fault, but here's how to fix it.

&lt;p&gt;&lt;a href="http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>certificates</category><category>fix</category><category>hacking</category><category>java</category><category>openSUSE</category><guid>http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html</guid><pubDate>Fri, 24 May 2013 04:03:15 GMT</pubDate></item><item><title>DNS Caching in Ubuntu Desktop</title><link>http://milosophical.me/blog/2013/02/24/dns-caching-in-ubuntu-desktop.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;In a &lt;a href="http://sinewalker.wordpress.com/2012/01/11/implementing-a-caching-only-dns-on-debian/"&gt;previous blog entry&lt;/a&gt; I described setting up a caching-only DNS server to speed up hostname resolution on Debian systems.  I've recently been playing with Ubuntu and noticed that this hack is not working.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2013/02/24/dns-caching-in-ubuntu-desktop.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>DNS</category><category>NetworkManager</category><category>hacking</category><category>howto</category><category>networks</category><category>ubuntu</category><guid>http://milosophical.me/blog/2013/02/24/dns-caching-in-ubuntu-desktop.html</guid><pubDate>Sun, 24 Feb 2013 00:32:32 GMT</pubDate></item><item><title>Java virtual memory limits again</title><link>http://milosophical.me/blog/2012/07/31/java-virtual-memory-limits-again-2.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I think I can finally put &lt;a title="32-bit Windows and JVM virtual memory limit" href="http://sinewalker.wordpress.com/2007/03/04/32-bit-windows-and-jvm-virtual-memory-limit"&gt;this old walnut&lt;/a&gt; to bed, having just updated it with some observations made by guru's of Stack Overflow. Hooray, only took me four years :-P&lt;/p&gt;</description><category>hacking</category><category>java</category><category>virtual memory</category><category>windows</category><guid>http://milosophical.me/blog/2012/07/31/java-virtual-memory-limits-again-2.html</guid><pubDate>Tue, 31 Jul 2012 02:50:57 GMT</pubDate></item><item><title>Windows 7 logon background hack</title><link>http://milosophical.me/blog/2012/05/18/windows-7-logon-background-hack.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;This is common knowledge, yet strangely every time I rebuild my work PC (which is too often! Gah!) I try and Google the location of Registry keys and folders and always, always get a bum-steer. So here, have another (bum-steer?) version of this hack on the Net.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/05/18/windows-7-logon-background-hack.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hacking</category><category>registry</category><category>windows</category><guid>http://milosophical.me/blog/2012/05/18/windows-7-logon-background-hack.html</guid><pubDate>Fri, 18 May 2012 11:56:28 GMT</pubDate></item><item><title>Install Emacs24 Snapshot on Debian, Ubuntu and Windows 7</title><link>http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I just can't wait for &lt;a title="An overview of what's coming in Emacs 24" href="http://www.masteringemacs.org/articles/2011/12/06/what-is-new-in-emacs-24-part-1/"&gt;Emacs24&lt;/a&gt; to be released! (I know, it's in beta and it'll be officially released Real Soon Now, but my catalyst is Technomancy's ESK2 which is such an improvement over ESK1, and it needs Emacs 24).


In &lt;a title="Build/Install emacs 24 on debian" href="http://sinewalker.wordpress.com/2012/01/15/build-and-install-emacs24-on-debian-squeeze/"&gt;my last post&lt;/a&gt; I had steps to build emacs from source-code. This is worth following for hacker cred, but it soon gets tedious if you have a lot of systems to put emacs on. As pointed out by a few readers, there are some snapshot builds available for different platforms. This post lists steps for installing the pre-built snapshots, for the three operating systems that I use.



&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>debian</category><category>emacs</category><category>emacs24</category><category>hacking</category><category>tips</category><category>ubuntu</category><category>windows</category><guid>http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html</guid><pubDate>Mon, 13 Feb 2012 00:15:29 GMT</pubDate></item><item><title>Build and install Emacs24 on Debian squeeze</title><link>http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Hacking in Debian is so easy (one of the reasons I switched). Take, for instance, building Emacs. This is such a piece of cake compared to the weird hoops you have to go through to get all the build dependencies on other platforms. It's something I never tried before, simply because it was too daunting trying to figure out all the packages I need to install. But apt-get has this awesome --build-deps switch...

&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>build-deps</category><category>debian</category><category>emacs</category><category>hacking</category><category>how-to</category><guid>http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html</guid><pubDate>Sun, 15 Jan 2012 11:57:54 GMT</pubDate></item><item><title>Implementing a caching-only DNS on Debian</title><link>http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;After 3 years of sticking with Novell, I recently switched away from openSUSE to &lt;a title="Debian GNU/Linux" href="http://www.debian.org" target="_blank"&gt;Debian&lt;/a&gt;. There are a few reasons why, but I won't bore you with them. So far I'm liking it. There are a few things to set up before I settle in, and one is slow DNS lookup.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>DNS</category><category>bind</category><category>debian</category><category>hacking</category><category>network</category><guid>http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html</guid><pubDate>Wed, 11 Jan 2012 03:35:59 GMT</pubDate></item><item><title>Blogging with Emacs Org Mode</title><link>http://milosophical.me/blog/2011/12/15/blogging-with-emacs-org-mode.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;My blog is really in need of some love. One of the reasons I'm not posting very frequently (apart from just not having much to say or making time to say it) is that it is such a pain to write posts in WordPress' built in editor.  I briefly considered editing in a text editor and then cut/pasting, but usually there's a mess to clean up anyway, so it's not much fun either. &lt;/p&gt; 


&lt;p&gt;&lt;a href="http://milosophical.me/blog/2011/12/15/blogging-with-emacs-org-mode.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>emacs org-mode blogging code</category><category>hacking</category><guid>http://milosophical.me/blog/2011/12/15/blogging-with-emacs-org-mode.html</guid><pubDate>Thu, 15 Dec 2011 10:53:00 GMT</pubDate></item><item><title>Curious cursor complication with Emacs and Windows Magnifier</title><link>http://milosophical.me/blog/2011/11/30/curious-cursor-complication-with-emacs-and-windows-magnifier.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I recently noticed a bug when you start GNU Emacs win32 &lt;em&gt;after&lt;/em&gt; starting &lt;a title="Microsoft: Make items on the screen appear bigger (Magnifier)" href="http://windows.microsoft.com/en-AU/windows7/Make-items-on-the-screen-appear-bigger-Magnifier"&gt;Windows Magnifier&lt;/a&gt;: Emacs' cursor becomes a single-pixel "caret" instead of the box cursor. This makes the cursor very hard to find.
&lt;!--more--&gt;

I usually leave Emacs' cursor at the default (&lt;code&gt;box&lt;/code&gt;) because this is so much easier to see, especially if you also enable &lt;code&gt;blink-cursor-mode&lt;/code&gt; (though&lt;a title="How to stop blinking cursors" href="http://www.jurta.org/en/prog/noblink"&gt; that's a matter of taste&lt;/a&gt;, I suppose). The default settings also set the cursor to a &lt;code&gt;hollow&lt;/code&gt; box when the &lt;code&gt;window&lt;/code&gt; (or the entire &lt;a title="Emacs frames and windows" href="http://emacsworld.blogspot.com/2008/08/emacs-frames-and-windows.html"&gt;&lt;code&gt;frame&lt;/code&gt;&lt;/a&gt;) is inactive.



Really, a text editor is unusable with a "caret" or bar-shaped cursor.



The following behaviors are observed with this bug:

&lt;/p&gt;&lt;ul&gt;
	&lt;li&gt;This affects at least GNU Emacs versions 23.1 &lt;a title="Download GNU Emacs for Windows, from GNU FTP site" href="http://ftp.gnu.org/pub/gnu/emacs/windows/"&gt;for Windows&lt;/a&gt;, and &lt;a title="GNU Emacs 24 win32 pre-built binaries at Google Code" href="http://code.google.com/p/emacs-for-windows/downloads/list"&gt;24.0 compiled&lt;/a&gt; with mingw for win32&lt;/li&gt;
	&lt;li&gt;The actual shape of the cursor has no correspondence with the value of the &lt;code&gt;cursor-type&lt;/code&gt; variable: it is always as-if the value were &lt;code&gt;(bar . 1)&lt;/code&gt; (a vertical bar, one pixel wide)&lt;/li&gt;
	&lt;li&gt;The cursor blinks, whether you have enabled &lt;code&gt;blink-cursor-mode&lt;/code&gt; or not&lt;/li&gt;
	&lt;li&gt;The value of the Windows Registry key &lt;strong&gt;&lt;code&gt;HKCU\Control Panel\Desktop\CaretWidth&lt;/code&gt;&lt;/strong&gt; also has no bearing on the cursor shape (though this key is great for setting the cursor thickness in other Windows programs...)&lt;/li&gt;
	&lt;li&gt;(This one took me ages to find) &lt;span style="text-decoration:underline;"&gt;It only happens if Windows Magnifier is running&lt;/span&gt; &lt;em&gt;before&lt;/em&gt; you start Emacs. If you start Emacs first, and &lt;em&gt;then&lt;/em&gt; start Magnifier, the cursor is unchanged and respects the value of &lt;code&gt;cursor-type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

So, the work-around for this is to start Emacs before you run Magnifier (especially: make sure the Windows Accessibility feature that starts Magnifier when you log in, is turned OFF).



&lt;a title="Search GNU Bugtracker for emacs cursor bugs" href="http://debbugs.gnu.org/cgi/pkgreport.cgi?include=subject%3Acursor;package=emacs"&gt;As far as I can tell&lt;/a&gt;, there is no bug report for this.  I may file one when I get around to figuring out &lt;a title="GNU Bugtracker home" href="http://debbugs.gnu.org/"&gt;GNU's bug-tracker&lt;/a&gt;.</description><category>bug</category><category>cursor</category><category>emacs</category><category>hacking</category><category>magnifier</category><category>registry</category><category>windows</category><guid>http://milosophical.me/blog/2011/11/30/curious-cursor-complication-with-emacs-and-windows-magnifier.html</guid><pubDate>Wed, 30 Nov 2011 03:17:06 GMT</pubDate></item><item><title>Java 7 is here - but it's lacking the dolphin's grace</title><link>http://milosophical.me/blog/2011/08/09/java-7-lacking-the-dolphins-grace.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;Well, after 5 years and the setting of the Sun, Java SE 1.7 (originally code-named "dolphin") has finally been released. Joyous celebrations from the land of Duke.&lt;/p&gt;


&lt;!--more--&gt;


&lt;p&gt;
There's much that has been long looked for in this release, and I'm happy about it — especially the nio.2 filesystem API and the improved support on the platform for scripting languages and dynamic languages. But the "improvements" to the Java language itself only highlight to me that this language is pretty well into zombie status (it's dead and yet it keeps trying to live and eat more developers' brains).
&lt;/p&gt;

&lt;p&gt;
Take this enhancement to the language that finally allows you to do a switch on Strings. This bit of syntactic sugar has been on my own wish list since 1997 (when I first started to play with Java and discovered you couldn't switch on Strings). But of course, the bureaucrats have bodged it. Look at this code:
&lt;/p&gt;


&lt;pre&gt;
public class StringSwitch {
    public static String getFruitColour(String name) {
        switch (name) {
        case "apple":
        case "raspberry":
        case "strawberry":
            return "Red";
        case "banana":
        case "lemmon":
            return "Yellow";
        case "kiwi":
        case "grapes":
        case "lime":
            return "Green";
        case "orange":
        case "pawpaw":
            return "Orange";
        default:
            return "Unknown";
        }
    }

    public static void main(String[] args) {
        System.out.println(getFruitColour("guava"));  // should fall through to default
        System.out.println(getFruitColour(null));     // actually causes NPE at the switch
    }
}
&lt;/pre&gt;

&lt;p&gt;
This should work, and the null string should cause the switch to fall through. Seems reasonable, yes? Well, no. You get an NPE:

&lt;/p&gt;&lt;blockquote&gt;

&lt;pre&gt;$ &lt;strong&gt;java StringSwitch&lt;/strong&gt;

Unknown

Exception in thread "main" java.lang.NullPointerException
	at StringSwitch.getFruitColour(StringSwitch.java:4)
	at StringSwitch.main(StringSwitch.java:26)&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Damn it, guys! How does this make my coding simpler? Now I have to remember that if I'm switching on String, I have to guard against NPEs. Okay, it's better than nested &lt;code&gt;if&lt;/code&gt;'s, but it's a serious gotcha. Again. Here's one solution, though of course, being Java, it's fugly:


&lt;/p&gt;&lt;pre&gt;
public class StringSwitch {
    public static String getFruitColour(String name) {
        if (name != null) {
            switch (name) {
                case "apple":
                case "raspberry":
                case "strawberry":
                    return "Red";
                case "banana":
                case "lemmon":
                    return "Yellow";
                case "kiwi":
                case "grapes":
                case "lime":
                    return "Green";
                case "orange":
                case "pawpaw":
                    return "Orange";
                default:
                    return "Unknown";
            }
        } else {
            return "Unknown (NULL)"; // bleah.
        }
    }

    public static void main(String[] args) {
        System.out.println(getFruitColour("guava"));  // should fall through to default
        System.out.println(getFruitColour(null));     // this time the NPE is guarded
    }
}
&lt;/pre&gt;
&lt;p&gt;
If anything, Java 7 demonstrates that the JVM is a great platform for dynamic languages other than Java. Like for instance Scala and Clojure... How disappointing.
&lt;/p&gt;
</description><category>hacking</category><category>java</category><category>rant</category><guid>http://milosophical.me/blog/2011/08/09/java-7-lacking-the-dolphins-grace.html</guid><pubDate>Tue, 09 Aug 2011 12:38:54 GMT</pubDate></item></channel></rss>