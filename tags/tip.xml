<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Milosophical Me (tip)</title><link>http://milosophical.me/</link><description></description><language>en</language><lastBuildDate>Fri, 30 Jan 2015 22:57:20 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>OpenSSH slow logins and DNS</title><link>http://milosophical.me/blog/2010/04/07/openssh-slow-logins-and-dns.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;There is a feature of OpenSSH, enabled by default, that causes the ssh daemon to do a name lookup for the client and confirm that it matches its IP address. This is supposed to check against some sort of IP spoof during SSH login attacks.  However on my local network which lacks a DNS, it results in lengthy delays during logins.


&lt;!--more--&gt;I found good explanations and how to fix this in the &lt;a title="OpenSUSE FAQ 3.3: ssh(1) takes a long time to connect or log in" href="http://www.openssh.com/faq.html#3.3"&gt;OpenSSH FAQ&lt;/a&gt; and also on the&lt;a title="SSH Login slow - NOVELL FORUMS" href="http://forums.novell.com/novell-product-support-forums/suse-linux-enterprise-server-sles/sles-configure-administer/340097-sles9-ssh-login-slow.html"&gt; SUSE Linux Forums&lt;/a&gt; and a &lt;a title="Libel: UseDNS resolution and OpenSSH" href="http://ayaz.wordpress.com/2008/02/03/usedns-resolution-and-openssh/"&gt;couple&lt;/a&gt; of &lt;a title="SuSE Linux slow logins over SSH" href="http://www.carlosvazquez.org/Blog/index.cfm?blog_id=72"&gt;blogs&lt;/a&gt;.  This issue also comes up as at least one &lt;a title='Ubuntu bug #424371 - Logins to OpenSSH server slow due to "UseDNS yes" config' href="https://bugs.launchpad.net/ubuntu/+source/openssh/+bug/424371"&gt;bug&lt;/a&gt; for Ubuntu (but it's not a bug, it's a &lt;a title="Jargon file: Feature" href="http://www.catb.org/~esr/jargon/html/F/feature.html"&gt;feature&lt;/a&gt;).



In a nutshell: if you want to remove this delay and don't care about doing reverse lookups, set &lt;strong&gt;UseDNS no&lt;/strong&gt; in &lt;strong&gt;/etc/ssh/sshd_config&lt;/strong&gt; and then restart the daemon. The FAQ explains it better than me.&lt;/p&gt;</description><category>hacking</category><category>openssh</category><category>ssh</category><category>tip</category><guid>http://milosophical.me/blog/2010/04/07/openssh-slow-logins-and-dns.html</guid><pubDate>Wed, 07 Apr 2010 05:56:25 GMT</pubDate></item><item><title>MS-Windows focus-follows-mouse Registry hacks</title><link>http://milosophical.me/blog/2010/03/10/ms-windows-focus-follows-mouse-registry-hacks.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I like the "focus follows mouse" window-focussing model from X11, because
&lt;/p&gt;&lt;ul&gt;
	&lt;li&gt;I don't have to click on the window, just move the mouse and the window it's over is focussed&lt;/li&gt;
	&lt;li&gt;I can focus a window &lt;em&gt;without&lt;/em&gt; bringing it to the front, which is sometimes handy. If I want it in front, I can click it.&lt;/li&gt;
&lt;/ul&gt;

However MS-Windows follows the old-fashioned, Macintosh/Smalltalk style of having users click on a window to focus it for the keyboard. How do you make MS-Windows behave more like X11?



&lt;!--more--&gt;I used to install &lt;strong&gt;TweakUI &lt;/strong&gt;from Microsoft, just so that I could turn on an X11-like focus-follows-mouse mode, but Microsoft don't make TweakUI for Vista (there is &lt;strong&gt;TweakVI &lt;/strong&gt;instead, if you want to Google for it. It's by some other company. It's not bad, but overkill for what I want to do).



In Vista, Microsoft added a GUI for this mode that's &lt;em&gt;almost&lt;/em&gt; what I want. You can do this:



Open Control Panel (new view, not Classic)

&lt;p style="padding-left:30px;"&gt;&amp;gt; Ease of Access Center&lt;/p&gt;

&lt;p style="padding-left:60px;"&gt;&amp;gt; Make the mouse easier to use&lt;/p&gt;

&lt;p style="padding-left:90px;"&gt;&amp;gt; [ ] Activate a window by hovering over it with the mouse&lt;/p&gt;

But this also brings the window to the front when it's focussed.  If that's what you want, then you're done. If you're like me and you want the window under the mouse to have keyboard focus, but you &lt;em&gt;don't&lt;/em&gt; want it brought to the front without clicking on it, you'll need to hack the Windows Registry. Here are some steps, which should be good for any release of Windows that is based on Windows NT (NT, 2000, XP, Vista, Win7):

&lt;ol&gt;
	&lt;li&gt;Run &lt;strong&gt;regedit &lt;/strong&gt;(Win+R, regedit, OK)&lt;/li&gt;
	&lt;li&gt;Open up the key &lt;strong&gt;HKEY_CURRENT_USER\Control Panel\Mouse&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;Change the value of the REG_DWORD &lt;strong&gt;ActiveWindowTracking&lt;/strong&gt; to 0x0000001 (1)&lt;/li&gt;
	&lt;li&gt;Open up the key &lt;strong&gt;HKEY_CURRENT_USER\Control Panel\Desktop&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Logical OR&lt;/strong&gt; the first byte of the REG_BINARY &lt;strong&gt;UserPreferencesMask&lt;/strong&gt; with &lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;1&lt;/strong&gt;.  That is, if the current value is df 3e 03 80 12 00 00 00, then leave the 'df' alone. If it's 9&lt;strong&gt;&lt;em&gt;e&lt;/em&gt;&lt;/strong&gt; 03 07 80 12 00 00 00 , change it to 9&lt;strong&gt;&lt;em&gt;f&lt;/em&gt; &lt;/strong&gt;.. ..  and so on &lt;strong style="color:#7744ee;"&gt;*&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;To make the focus a little slower, so that pop-up windows are useable, you also want to change the focus timing. Change the REG_DWORD &lt;strong&gt;ActiveWindTrkTimeout&lt;/strong&gt; (also in HKEY_CURRENT_USER\Control Panel\Desktop) to the number of milliseconds to wait before focus shifts to the window under the mouse.  I like a value of 0x00000080 (128ms). You might like 200ms (c8), or some faster or slower value.&lt;/li&gt;
&lt;/ol&gt;

&lt;strong style="color:#7744ee;"&gt;*&lt;/strong&gt; If you can't do this hexadecimal bit twiddling math in your head (difficult if you're not a programmer), then Windows' Calc can do it for you: put it in Programmer and Hex modes, type the first byte (hex pair e.g. 9e), press the 'Or' button, then '1' and the '=' button.  If the number changes, that's what you replace the first byte with. Thanks to Erik in the comments below, I've finally figured this out and (I hope) clarified what to do..



So, in summary, the Registry keys are as follows for X11-like window focus:

&lt;pre&gt;HKEY_CURRENT_USERS\Control Panel\Mouse

  REG_DWORD ActiveWindowTracking = 0x00000001  (1)

HKEY_CURRENT_USERS\Control Panel\Desktop

  REG_DWORD ActiveWindTrkTimeout = 0x00000080  (128)

  REG_BINARY UserPreferencesMask OR= 01 .. .. .. .. .. .. .. ..&lt;/pre&gt;

These registry hacks require a reboot to take effect.</description><category>desktop</category><category>geek</category><category>hacking</category><category>how-to</category><category>tip</category><category>useability</category><category>windows</category><category>x11</category><guid>http://milosophical.me/blog/2010/03/10/ms-windows-focus-follows-mouse-registry-hacks.html</guid><pubDate>Wed, 10 Mar 2010 03:42:26 GMT</pubDate></item><item><title>Registering local DTDs or XML schemas with NetBeans</title><link>http://milosophical.me/blog/2009/05/12/registering-local-dtds-or-xml-schemas-with-netbeans.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;The NetBeans online help &lt;a title="NetBeans XML catalog help on Jiema" href="http://www.jiema.org/xref/netbeans/usersguide/javahelp/org/netbeans/modules/usersguide/xml/catalog/xmlcatalog_mount.html"&gt;describes the steps for registering a local DTD or XML file&lt;/a&gt; with NetBeans' &lt;em&gt;DTDs and XML Schemas Manager&lt;/em&gt;. It's succinct and to the point, but for the slow people in the room it's a bit confusing. So here's my tip for registering a local DTD file with NetBeans so that you can use NetBeans' awesome XML validation and completion features.


&lt;!--more--&gt;In my example, I'm trying to use NetBeans to validate an &lt;a title="Solaris SMF Quick start" href="http://www.sun.com/bigadmin/content/selfheal/smf-quickstart.jsp"&gt;SMF&lt;/a&gt; &lt;a title="Service development intro" href="http://www.sun.com/bigadmin/content/selfheal/sdev_intro.jsp"&gt;Manifest&lt;/a&gt;, which is an XML file defined by a &lt;code&gt;SYSTEM&lt;/code&gt; DTD called &lt;code&gt;service_bundle.dtd.1&lt;/code&gt;.  On Solaris 10 machines you can find a copy of the DTD file in &lt;code&gt;/usr/share/lib/xml/dtd/service_bundle.dtd.1&lt;/code&gt;, and most example SMF manifests that you can find &lt;a title="SMF Manifest Repository" href="http://www.blastwave.org/smf/manifests.php"&gt;on the Internet&lt;/a&gt; include the DOCTYPE like so:

&lt;/p&gt;&lt;pre&gt;&amp;lt;!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1"&amp;gt;&lt;/pre&gt;

If you run NetBeans on Solaris 10, I assume this will probably work out-of-the-box (though I haven't tried this...).  However for us hackers on other platforms, you need to copy this file down to your development machine, and then register it with NetBeans so that you can use it.



NetBeans' DTDs and XML Schemas Manager contains a collection of XML Schema Catalogues for a whole bunch of technologies. You'll want to add your local DTDs/Schemas to the &lt;strong&gt;User Catalog&lt;/strong&gt; (&lt;em&gt;sic&lt;/em&gt;), which is the only one that's read-write. Do the following:

&lt;ol&gt;
	&lt;li&gt;&lt;strong&gt;Tools &lt;/strong&gt;menu, &lt;strong&gt;DTDs and XML Schemas&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;Choose &lt;strong&gt;User Catalog [read-write] &lt;/strong&gt;from the list of &lt;em&gt;DTDs and XML Schemas&lt;/em&gt;&lt;/li&gt;
	&lt;li&gt;Press "&lt;strong&gt;Add Local DTD or Schema...&lt;/strong&gt;" button&lt;/li&gt;
	&lt;li&gt;In our example, the DOCTYPE reads:
&lt;pre&gt;SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1"&lt;/pre&gt;

So, we must map this SYSTEM ID  to a local URI on our development machine.  If it had said &lt;code&gt;PUBLIC "..."&lt;/code&gt; then we would map a PUBLIC ID instead.&lt;/li&gt;
	&lt;li&gt;Click the radio button for the relevant ID type (&lt;strong&gt;System ID&lt;/strong&gt; in our case)&lt;/li&gt;
	&lt;li&gt;Copy in the string ID from your XML file into the relevant field. Make sure you don't put in the double-quotes
&lt;span style="text-decoration:underline;"&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt;&lt;/span&gt; for a DTD that lives on the filesystem ID, like ours, &lt;strong&gt;the ID should begin with &lt;span style="color:#7744ee;"&gt;&lt;code&gt;file:&lt;/code&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;Click the "&lt;strong&gt;Browse...&lt;/strong&gt;" button and locate the DTD file you downloaded&lt;/li&gt;
	&lt;li&gt;Click "&lt;strong&gt;OK&lt;/strong&gt;"&lt;/li&gt;
&lt;/ol&gt;

You've now mapped the SYSTEM ID to your local copy of the DTD file for &lt;code&gt;service_bundle.dtd&lt;/code&gt;. If you try and validate the XML (&lt;strong&gt;Alt+Shift+F9&lt;/strong&gt;, or from the toolbar) it will stop complaining of a missing DTD and actually check your XML against the doctype definition.



I got mislead by the Recommendation (both in the online help and on the dialog box). It says that the "common solution for XML documents specified by DTD is using the Public ID -&amp;gt; URI mapping." It goes on to say that "System ID -&amp;gt; URI mapping can also be used to redirect the DTD location specified by SYSTEM ID", but I got confused by that point.



I also had a hard time working out that the System ID should begin with "file:".  The give-away that I didn't spot until later, was in the error message from the XML validator:

&lt;pre&gt;XML validation started.

Checking file:/D:/src/support/smf/emc/manifests/emc-fast-IndexServer.xml...

Referenced entity at "&lt;strong&gt;file:&lt;/strong&gt;/usr/share/lib/xml/dtd/service_bundle.dtd.1".

\usr\share\lib\xml\dtd\service_bundle.dtd.1 (The system cannot find the path specified) [30]

XML validation finished.&lt;/pre&gt;

Duh!  I could have also just copied that string &lt;em&gt;verbatim&lt;/em&gt;. Oh well, now I've blogged about it too, so hopefully I won't forget it next time :)</description><category>DTD</category><category>XML</category><category>hacking</category><category>howto</category><category>netbeans</category><category>tip</category><guid>http://milosophical.me/blog/2009/05/12/registering-local-dtds-or-xml-schemas-with-netbeans.html</guid><pubDate>Tue, 12 May 2009 00:27:55 GMT</pubDate></item><item><title>XMing screen size and changing multiple monitors</title><link>http://milosophical.me/blog/2009/02/20/xming-screen-size.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;My work's notebook (Windows XP) is running Xming as it's X11 server, and it travels between work, home and on the train.


My work office has  a docking station and a rotating second display. Typically if I start Xming with this display plugged in, Xming will adjust it's screen size to use both displays, but if I start it without the screen plugged in, it'll size to just the notebook screen. If I later add the 2nd screen (by docking the notebook), Xming won't use it without a restart. Also if I rotate the screen, only the top 1200 pixels will be used by Xming.



The solution is to specify a screen size to begin with that is as wide and tall as both of the screens.  On my docked notebook the two displays are the notebook's display (1920x1200 pixels)  and 2nd display (1600x1200 pixels, which rotates to 1200x1600). So that means the combined screen width is 3520 pixels, and the tallest screen hight is 1600 pixels.  Specify this to Xming when it starts:

&lt;/p&gt;&lt;p style="text-align:center;"&gt;&lt;code&gt;path\to\xming.exe :0 -clipboard -multiwindow &lt;strong&gt;&lt;span style="color:#7722ff;"&gt;-screen 0 3520x1600&lt;/span&gt;&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p style="text-align:left;"&gt;Now I can add/remove/rotate the second screen and still use all of it without restarting Xming.&lt;/p&gt;</description><category>display</category><category>hacking</category><category>screens</category><category>tip</category><category>x11</category><category>xming</category><guid>http://milosophical.me/blog/2009/02/20/xming-screen-size.html</guid><pubDate>Thu, 19 Feb 2009 23:22:44 GMT</pubDate></item><item><title>Multiple Xming servers on a single Windows host</title><link>http://milosophical.me/blog/2008/12/17/multiple-xming-servers-on-a-single-windows-host.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;One use-case we have at work for &lt;a title="Xming sourceforge" href="http://sourceforge.net/projects/xming"&gt;Xming&lt;/a&gt; is to be the X11 server on a Windows RDP terminal server. For security reasons (don't ask!) we can only access certain Unix hosts via an RDP session from our desktops, not directly over the campus LAN. So, we installed Xming on the TS and it works well. Except if two or more people wish to use it at once. Then it's first come, first served.


&lt;!--more--&gt;I found a work-around for this that works, but is inelegant: start with a different display number argument.  For instance, the normal Xming start-up parameters are like this:

&lt;/p&gt;&lt;p style="text-align:center;"&gt;&lt;code&gt;D:\Programs\Xming\Xming.exe &lt;strong&gt;&lt;span style="color:#7744ff;"&gt;:0&lt;/span&gt;&lt;/strong&gt; -clipboard -multiwindow&lt;/code&gt;&lt;/p&gt;



Change the &lt;strong&gt;&lt;span style="color:#7744ff;"&gt;&lt;code&gt;:0&lt;/code&gt;&lt;/span&gt;&lt;/strong&gt; to be something else, and you can have a second (or third) instance running on the same host. Then, so long as you launch an xterm on the remote hosts using an item from your Xming menu, then it seems to pass the X11 packets back to your instance of the server, and not to other people on the same TS.



There are at least a couple of issues with this:

&lt;ul&gt;
	&lt;li&gt;It's not very resource efficient. But I can't see a way around this, so long as we are using the RDP terminal server&lt;/li&gt;
	&lt;li&gt;You need to manually allocate display numbers to different people. If two people pick the same number, one will lose (first come, first served again). But at least your clients won't end up on their server...&lt;/li&gt;
&lt;/ul&gt;

If anybody can think of a way to snoop which displays are already taken, then choose the next one, it'd be neat!</description><category>hacking</category><category>tip</category><category>x11</category><category>xming</category><guid>http://milosophical.me/blog/2008/12/17/multiple-xming-servers-on-a-single-windows-host.html</guid><pubDate>Tue, 16 Dec 2008 20:21:50 GMT</pubDate></item><item><title>Trouble with the New X11 server in Cygwin</title><link>http://milosophical.me/blog/2008/11/26/new-x11-server-in-cygwin.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I recently upgraded my Cygwin install and noticed that Cygwin has switched it's X server &lt;code&gt;XWin.exe&lt;/code&gt; from the XFree86 codebase to the Xorg codebase. Besides an updated logo, it also has some other side-effects.


&lt;!--more--&gt;The first one I noticed is that the xterm now has a menu turned on by default. If this annoys you (like it did me), you can turn it off by adding the following to your &lt;code&gt;~/.Xdefaults&lt;/code&gt;:

&lt;/p&gt;&lt;p style="text-align:center;"&gt;&lt;code&gt;&lt;strong&gt;XTerm*toolBar: off&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;



The next side-effect I haven't yet solved. I &lt;a title="how to set up cygwin's xwin menu" href="http://sinewalker.wordpress.com/2006/04/18/cygwin-systray-menu/"&gt;use the XWin menu&lt;/a&gt; to define some links to the servers I look after at work. I use &lt;code&gt;plink.exe&lt;/code&gt; (part of &lt;a title="PuTTY home page" href="http://www.chiark.greenend.org.uk/~sgtatham/putty/"&gt;PuTTY&lt;/a&gt;) to launch an xterm on the remote host, displayed locally, and using &lt;code&gt;pagent.exe&lt;/code&gt; to do the authentication. For example:

&lt;pre&gt;&lt;code&gt;&lt;strong&gt;MENU DEV_SERVERS {
    "Content Server" exec "D:/Programs/PuTTY/plink.exe -ssh -X -C -load someserverdef /usr/openwin/bin/xterm -name greenbackground -ls"
&lt;/strong&gt;&lt;/code&gt;&lt;/pre&gt;

...



This used to work, but now nothing happens.  Interestingly, the command &lt;em&gt;will &lt;/em&gt;work if you execute it directly from a bash shell. If anyone has an idea, I'd be grateful for their help :)

&lt;h5&gt;UPDATE: - 20081217 -- Use Xming, maybe&lt;/h5&gt;

I haven't yet figured out ssh-agent. However one work-around that I tried earlier and added in the comments was no good: the X clients started in a terminal that is forked off this way don't come through for some reason, to do with the way the X packets are tunnelled I think. So, I was motivated to try &lt;a title="Xming web site" href="http://www.straightrunning.com/XmingNotes/"&gt;Xming&lt;/a&gt;.



Xming is being used quite successfully by my work colleagues who don't have a whole Cygwin stack on their machines. It's a lightweight X11 server for Windows, and it even uses Microsoft's OpenGL apparently. I'll have to try out some 3D clients from home soon to see what that gets me, but it could be good.



Anyway, for work, it seems to integrate very well with PuTTY. There's even a stand-alone putty you can &lt;a title="Xming sourceforge" href="http://sourceforge.net/projects/xming"&gt;download&lt;/a&gt; that's pre-integrated, though it seems to also require the Xming server.



I also found that it'll serve my local X clients quite well. The most important of these is my emacs, of course. For that to work well, I had to download the extra fonts since emacs uses servers-side fonts. But it works and is indistinguishable from the X11 server that's built into Cygwin.



I haven't yet un-installed Cygwin's X server: I fear it could also remove clients and libraries, and I don't want the hastle just now of figuring that out.



A final note: It's menu config file is Xmingrc (no dot), which lives in Window's HOME %USERPROFILE%. Also, because it's got no Cygwin dependency, you can't launch local Cygwin X clients from this menu. At least, not without wrapping them in calls to Cygwin's run.exe, e.g.

&lt;p style="text-align:center;"&gt;&lt;code&gt;d:\cygwin\bin\run.exe -p /usr/X11R6/bin emacs -display 127.0.0.1:0.0 --debug-init&lt;/code&gt;&lt;/p&gt;</description><category>cygwin</category><category>hacking</category><category>help</category><category>problem</category><category>tip</category><category>x11</category><category>xming</category><category>xorg</category><guid>http://milosophical.me/blog/2008/11/26/new-x11-server-in-cygwin.html</guid><pubDate>Tue, 25 Nov 2008 23:07:34 GMT</pubDate></item><item><title>NetBeans 6.5 and Python</title><link>http://milosophical.me/blog/2008/11/24/netbeans-65-and-python.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;a title="NetBeans 6.5 release page" href="http://www.netbeans.org/community/releases/65/"&gt;NetBeans 6.5 is out&lt;/a&gt;! You can &lt;a title="Using Nimbus with NetBeans 6.5 -- noice!" href="http://mrhaki.blogspot.com/2008/11/start-netbeans-65-with-nimbus-look-and.html"&gt;run it with the&lt;/a&gt; &lt;a title="The Nimbus L&amp;amp;F project page" href="https://nimbus.dev.java.net/"&gt;Nimbus look and feel&lt;/a&gt; too! There's also an &lt;a title="NetBeans 6.5 Python -- Early Access" href="http://www.netbeans.org/features/python/index.html"&gt;Early Access plugin for Python&lt;/a&gt;. All very nice.


I recently had occasion to play with some Python at work (a small script to do some configurations, and I didn't want to do them in bash), so I took the time to get all of this set up. It's all so very easy and not worth writing about. However I thought that the i&lt;a title="NetBeans' integrated Jython debugger" href="http://wiki.netbeans.org/Python#section-Python-Debugger"&gt;nteractive debugger&lt;/a&gt; (which is &lt;em&gt;awesome&lt;/em&gt;, btw) has a small issue that needs resolving. Mean-time, here's a work-around.



&lt;!--more--&gt;&lt;strong&gt;The issue is&lt;/strong&gt;: the debugger (which runs in Jython) starts in the NetBeans 6.5 install directory, but the normal run-time is in the project's source directory. Normally this is not a problem, unless you're writing a script to pick up files from the current directory. If you just dump your data file in the project's source directory, then it'll work when you run it (with the F6 key), but not when you debug it (Ctrl-F5).



&lt;strong&gt;The work-around&lt;/strong&gt;:  The debugger is interactive and includes a Jython shell which is integrated into your debugging context (so cool)! Upon starting the debugger, your can just issue these commands:

&lt;code&gt; &lt;/code&gt;

&lt;pre style="padding-left:30px;"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;strong&gt;import os, sys&lt;/strong&gt;

&amp;gt;&amp;gt;&amp;gt; &lt;strong&gt;os.chdir(os.path.dirname(sys.argv[0]))&lt;/strong&gt;&lt;/pre&gt;

This will set the CWD for the current debug session to the directory where your script file is. That's where the CWD is set when you run scripts normally with the F6 key.



&lt;strong&gt;The solution&lt;/strong&gt;: I've sent an &lt;a title="NetBeans Issue 153733" href="http://www.netbeans.org/issues/show_bug.cgi?id=153733"&gt;enhancement request&lt;/a&gt; to the Python-IDE team in &lt;a title="Python debugger" href="http://www.netbeans.org/issues/buglist.cgi?Submit+query=Submit+query&amp;amp;component=python&amp;amp;subcomponent=debugger&amp;amp;issue_status=NEW&amp;amp;issue_status=STARTED&amp;amp;issue_status=REOPENED&amp;amp;email1=&amp;amp;emailtype1=exact&amp;amp;emailassigned_to1=1&amp;amp;email2=&amp;amp;emailtype2=exact&amp;amp;emailreporter2=1&amp;amp;issueidtype=include&amp;amp;issue_id=&amp;amp;changedin=&amp;amp;votes=&amp;amp;chfieldfrom=&amp;amp;chfieldto=Now&amp;amp;chfieldvalue=&amp;amp;short_desc=&amp;amp;short_desc_type=substring&amp;amp;long_desc=&amp;amp;long_desc_type=substring&amp;amp;issue_file_loc=&amp;amp;issue_file_loc_type=substring&amp;amp;status_whiteboard=&amp;amp;status_whiteboard_type=substring&amp;amp;keywords=&amp;amp;keywords_type=anytokens&amp;amp;field0-0-0=noop&amp;amp;type0-0-0=noop&amp;amp;value0-0-0=&amp;amp;cmdtype=doit&amp;amp;newqueryname=&amp;amp;order=Reuse+same+sort+as+last+time"&gt;NetBeans' issue tracker&lt;/a&gt;. I'm not sure where the CWD should be set in the general case, but probably it should be in &amp;lt;project-base&amp;gt;/src to be consistent with the normal runtime.



&lt;strong&gt;2009-01-11 Update&lt;/strong&gt;: The&lt;a href="http://www.netbeans.org/issues/show_bug.cgi?id=153733"&gt; issue has been fixed&lt;/a&gt;! Awesome work by jymen (Jean-Yves Mengant). I'll have to &lt;a title="Building the NB Python plug-in from source" href="http://wiki.netbeans.org/NbPythonHgBuild"&gt;check out a recent build&lt;/a&gt; from trunk and give it a whirl!</description><category>code</category><category>hacking</category><category>netbeans</category><category>python</category><category>tip</category><guid>http://milosophical.me/blog/2008/11/24/netbeans-65-and-python.html</guid><pubDate>Mon, 24 Nov 2008 01:08:42 GMT</pubDate></item><item><title>Switching to Java JDK 6u10</title><link>http://milosophical.me/blog/2008/10/30/switching-to-java-jdk-6u10.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I've been using 6u10 beta for a while and keeping 6u3 as my main JDK. It's also the default JDK for NetBeans but now that update 10 of &lt;em&gt;Mustang &lt;/em&gt;is out of beta, it's time for me to ditch 6u3 and swtich to 6u10 final.
&lt;!--more--&gt;

This is fairly straight forward. Here's what I did:

&lt;/p&gt;&lt;ol&gt;
	&lt;li&gt;Install JDK 6u10 (it'll find 6u10b and offer to remove it)&lt;/li&gt;
	&lt;li&gt;Start NetBeans, add the new 6u10 and remove the (now missing) 6u10b java platforms. Do this from the &lt;strong&gt;Tools &amp;gt; Java Platforms&lt;/strong&gt; menu&lt;/li&gt;
	&lt;li&gt;To change the default JDK (which is the one running NetBeans itself)
&lt;ol&gt;
	&lt;li&gt;edit &lt;code&gt;/&lt;em&gt;path&lt;/em&gt;/&lt;em&gt;to&lt;/em&gt;/&lt;em&gt;NetBeans&lt;/em&gt;/etc/netbeans.conf&lt;/code&gt; (you can do this in NB if you like)&lt;/li&gt;
	&lt;li&gt;change the &lt;strong&gt;&lt;code&gt;netbeans_jdkhome&lt;/code&gt;&lt;/strong&gt; property to be the path to your 6u10. On my Windows machine, this is &lt;code&gt;"D:\Java\jdk1.6.0_10"&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;Restart NetBeans&lt;/li&gt;
&lt;/ol&gt;

&lt;/li&gt;
	&lt;li&gt;(optional) Uninstall your other jdk6 and remove it from NetBeans' list.&lt;/li&gt;
&lt;/ol&gt;

More tips for &lt;code&gt;netbeans.conf&lt;/code&gt; can be found on the &lt;a title="NetBeans FAQ on netbeans.conf" href="http://wiki.netbeans.org/FaqNetbeansConf"&gt;NetBeans Community Wiki&lt;/a&gt;.



My policy is to keep around only the latest stable update of each JDK, so I still have 1.4.2_17 and 1.5.0_15, in addition to (now) 1.6.0_10. Mainly this is because I still use 1.4.2 for work and 1.5.0 for testing. But there's no point in keeping two updates of the same version because their APIs are the same.



Same goes for the javadoc: it shouldn't have changed between 1.6.0 and 1.6.0_10 so I haven't bothered to check it or to download a newer copy. I also keep (zipped) javadocs for 1.4.2 and 1.5.0.</description><category>hacking</category><category>java</category><category>netbeans</category><category>tip</category><guid>http://milosophical.me/blog/2008/10/30/switching-to-java-jdk-6u10.html</guid><pubDate>Wed, 29 Oct 2008 22:52:21 GMT</pubDate></item><item><title>Stripping tags from ogg Vorbis files</title><link>http://milosophical.me/blog/2008/08/26/stripping-tags-from-ogg-vorbis-files.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I have a bunch of free &lt;a title="Xiph's meta container format for media" href="http://www.xiph.org/ogg/"&gt;Ogg&lt;/a&gt; &lt;a title="Patent-free audio codec (MP3 killer)" href="http://www.vorbis.com/"&gt;Vorbis&lt;/a&gt; audio files that I've downloaded from &lt;a title="Kahvi Collective. Sound has the power to make the world a better place" href="http://kahvi.org/"&gt;Kahvi.org&lt;/a&gt;. They're great! But recently they've been including cover art within the files, which breaks Windows Media Player (it can't handle the very long tags of binhex-coded JPGs).


Since I rather like WMP's integration in windows (keyboard shortcuts), and &lt;a title="Kewl KDE music player (iTunes killer)" href="http://amarok.kde.org/"&gt;Amarok&lt;/a&gt; &lt;a title="Amarok for win32 is still a work in progress, but it compiles..." href="http://amarok.kde.org/wiki/Development/Win32"&gt;isn't quite ready for win32&lt;/a&gt;, I thought I'd find a way to strip the troublesome tags from the data files rather than change to another player.



Here's a quick-and-dirty shell hack to remove the tags from the files and get them playable by daft players such as Windows Media Player



&lt;!--more--&gt;

&lt;/p&gt;&lt;pre&gt;#!/bin/bash

###############################################################################

#

#   File:       fixvorbis.sh

#   Language:   Bash shell script

#   Time-stamp: &amp;lt;2008-08-26 15:48:45 tzbblg&amp;gt;

#   Platform:   N/A (requirest ogg Vorbis tools installed)

#   OS:         *nix

#   Authors:    Michael Lockhart [MJL]

#

#   Rights:     Copyright © 2008 Michael James Lockhart, B.App.Comp(HONS)

#

#     This program is free software: you can redistribute it and/or

#     modify it under the terms of th e GNU General Public License as

#     published by the Free Software Foundation, either version 3 of the

#     License, or (at your option) any later version.

#

#     This program is distributed in the hope that it will be useful,

#     but WITHOUT ANY WARRANTY; without even the implied warranty of

#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the

#     GNU General Public License for more details.

#

#     You should have received a copy of the GNU General Public License

#     along with this program.  If not, see .

#

#   PURPOSE:

#

#     Script to strip out COVERART tags from ogg vorbis files (these

#     tags break certain players...)

#

#   HISTORY:

#

#   MJL20080826 - Created.

#



# extract the comments, less the COVERART tags

# (keep the art in separate files)



for n in *.ogg; do
    echo "Extracting comments and COVERART from $n"
    vorbiscomment -l $n | grep COVERART &amp;gt; $n-art.txt
    vorbiscomment -l $n | grep -v COVERART &amp;gt; $n-comment.txt
done



#if there's a comments patch (stored in patch.txt in the current dir)

# then apply the patch to the comments.

if [ -f patch.txt ]; then
    for n in *-comment.txt; do
	patch $n patch.txt
    done
fi



# edit the comments with new comment files, minus art, possibly patched.

for n in *.ogg; do
    echo "Replacing comments in $n"
    vorbiscomment -c $n-comment.txt -w $n
done



#clean up

rm *-comment.txt



# clean-up of art is manual. There might be different cover-art from

# each file, but if not (diff a*-art.txt b*.txt etc produces no

# output) then just remove all but first and rename it...&lt;/pre&gt;

&lt;hr&gt;The smarts are all in the vorbis utilites included as part of Cygwin. Specifically the script uses vorbiscomment&lt;sub&gt;(1)&lt;/sub&gt; to extract and apply tags in the Ogg files, and grep and (optionally) patch to manipulate the comments.



Enjoy!



P.S. My Wordpress stylesheet is doing weird things with the margins and this is really badly formatted, sorry. You can copy/paste into a text editor just fine though...</description><category>audio</category><category>code</category><category>cygwin</category><category>hacking</category><category>tip</category><category>vorbis</category><guid>http://milosophical.me/blog/2008/08/26/stripping-tags-from-ogg-vorbis-files.html</guid><pubDate>Tue, 26 Aug 2008 06:05:34 GMT</pubDate></item><item><title>Cascaded revision control strategy</title><link>http://milosophical.me/blog/2008/08/21/cascaded-revision-control-strategy.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;Okay, this isn't rocket-science, and in fact it's not even my idea (heard it on the &lt;a title="Free/Libré Open Source Software POD casts" href="http://twit.tv/FLOSS"&gt;FLOSS&lt;/a&gt; &lt;a title="Git" href="http://twit.tv/floss19"&gt;POD about Git&lt;/a&gt;). A problem with centralised repository systems such as Subversion (which is used on SourceForge) is that you need network access to do many things, and also to just save your work. You can't do commits to the repo' while on the train, for instance (which is where I do most of my hacking).


One option is to switch to a distributed revision system, such as &lt;a title="The Git home page" href="http://git.or.cz/"&gt;Git&lt;/a&gt; or &lt;a title="The Hg home page" href="http://www.selenic.com/mercurial/wiki/"&gt;Mercurial&lt;/a&gt;.  I may do that some day, but right now is not a good time for me to be learning a new revision system. Plus to have SourceForge host my project in Hg (for instance) means installing it myself and &lt;a title="How to hose a Hg project on SourceForge" href="http://www.selenic.com/mercurial/wiki/index.cgi/MercurialOnSourceforge"&gt;blah-blah-blah&lt;/a&gt;. Then there's IDE integration to consider...



I want to have my cake and eat it too.



&lt;!--more--&gt;A very simple compromise is just to have a local SVN repo' on my laptop, to which I commit minor/experimental changes, hacking on bug fixes etc. Then periodically upload only the good changes to the main repo' on my home machine, or to a public SF repo, or wherever (depending on the project). You can employ this same strategy in order to use mixed repo's, if Hg or Git (or &lt;a title="Canonical's free projects site (Launchpad)" href="https://launchpad.net/"&gt;LaunchPad&lt;/a&gt;) float your boat but your project is in SVN...

&lt;/p&gt;&lt;h3&gt;Basic idea&lt;/h3&gt;

The idea is pretty simple. Keep a local SVN repository to which I commit changes. I would have 2 working copies, one form the main/public repo and a 2&lt;sup&gt;nd&lt;/sup&gt; from my private repo. Most hacking would take place in the 2&lt;sup&gt;nd&lt;/sup&gt; working copy, with planned commits back to the main repo via a copy from my 2&lt;sup&gt;nd&lt;/sup&gt; (private) working copy of my private repo to my 1&lt;sup&gt;st&lt;/sup&gt; working copy, then update/commit to public repo:



&lt;a href="http://sinewalker.files.wordpress.com/2008/08/svn-svn1.png"&gt;&lt;img class="size-medium wp-image-337" src="http://sinewalker.files.wordpress.com/2008/08/svn-svn1.png?w=300" alt="Cascaded subversion repositories" width="300" height="186"&gt;&lt;/a&gt;

&lt;h3&gt;What this achieves&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;Local repo to which can commit and revert while offline&lt;/li&gt;
	&lt;li&gt;Do not have to make public commits of experimental changes&lt;/li&gt;
	&lt;li&gt;Do not have to switch to a distributed revision system (which achieves same aims)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Simple workflow&lt;/h3&gt;

&lt;ol&gt;
	&lt;li&gt;Check out of main/public SVN repo&lt;/li&gt;
	&lt;li&gt;Create a private repo and import code (or check in)&lt;/li&gt;
	&lt;li&gt;Check out of private SVN repo to 2&lt;sup&gt;nd&lt;/sup&gt; working copy&lt;/li&gt;
	&lt;li&gt;Make minor/experimental changes in 2&lt;sup&gt;nd&lt;/sup&gt; working copy, commit these to private SVN repo&lt;/li&gt;
	&lt;li&gt;Tag good states in private SVN repo (these are public check-in candidates)&lt;/li&gt;
	&lt;li&gt;Copy from private 2&lt;sup&gt;nd&lt;/sup&gt; working copy back to 1&lt;sup&gt;st&lt;/sup&gt; working copy
(applies your changes in your 1&lt;sup&gt;st&lt;/sup&gt; working copy)&lt;/li&gt;
	&lt;li&gt;Update/check-in to main/public repo per usual&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Compare/contrast branches&lt;/h3&gt;

Having a private development stream can also be accomplished by using branches on the public repo. However this does not achieve the aim of being able to commit and revert while offline, or the freedom to experiment without having to publish your false-starts.

&lt;h3&gt;Compare/contrast svnsync&lt;/h3&gt;

Briefly looked at this tool, but it's for mirroring repositories only. It's use case is for distributing query load across multiple servers. However all commits to the target (mirror) repo's must be done exclusively by svnsync, so it does not match my use case: I want to be able to commit locally too.

&lt;h3&gt;Tagging "good" commit candidates&lt;/h3&gt;

&lt;strong&gt;Step 5&lt;/strong&gt; is interesting: you can tag the local repo when your code reaches a state that is suitable to commit to the main repo. Very useful if you want to commit, but still unable because you're offline. Also a good way to filter out "dumb" commits.



The alternative to tagging good commit candidates would be to roll &lt;em&gt;all&lt;/em&gt; the changes together into a single main commit by just checking out of the local SVN back to your 1&lt;sup&gt;st&lt;/sup&gt; working copy at the end. But that would lose some change history. By tagging in local, I can do commits to main in a manner that matches the semantics of the change. That is, first I did A (commented A and tagged A). Then I did B, and so on up to C. Then when commiting back to main, don't just commit C: commit A first and then B, so that the change history is not lost on main repo.

&lt;h3&gt;What about updates?&lt;/h3&gt;

This idea does have a couple of problems with updates from others:

&lt;ul&gt;
	&lt;li&gt;merging changes from others to the local repo could be an issue. Conflicts might have to be resolved twice? I haven't thought hard about this one yet.&lt;/li&gt;
	&lt;li&gt;does not solve the "hide in a hole and get behind" problem, possibly exacerbates it&lt;/li&gt;
	&lt;li&gt;could potentially give a false sense of security ("my changes are in the repo, aren't they?"). Potential to forget to commit back to main if always commiting to local...&lt;/li&gt;
&lt;/ul&gt;

All of these should be kept in mind, and apply some sense and judgement. The SVN documentation about branches has some good advice. I would add: if you're using a private repo, it might be good to have a public branch to back it as well, so that everyone

knows what's going on, and to assist with the merging, since SVN 1.5 can help if it can see all the changes in seperate branches of one repo, but it can't help when you're trying to merge across two.

</description><category>hacking</category><category>subversion</category><category>svn</category><category>tip</category><guid>http://milosophical.me/blog/2008/08/21/cascaded-revision-control-strategy.html</guid><pubDate>Thu, 21 Aug 2008 00:45:24 GMT</pubDate></item></channel></rss>