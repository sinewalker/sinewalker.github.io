<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Milosophical Me</title><link>http://milosophical.me/</link><description>A geek's notebook</description><atom:link href="http://milosophical.me/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Mon, 02 Feb 2015 17:18:46 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Mounting LUKS/LVM from a LiveUSB</title><link>http://milosophical.me/blog/mounting-lukslvm-from-a-liveusb.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;
After upgrading work's openSUSE laptop from 13.1 to 13.2 today it
would not unlock the LUKS-encrypted LVM, which is a problem since the
entire SSD is encrypted (except for /boot).  Bummer.
&lt;/p&gt;

&lt;p&gt;
So, I had occasion to test my backup/recovery strategy and found that
I had a few issues (of course I did!)
&lt;/p&gt;

&lt;p&gt;
One problem was: I have my work laptop backups stored to an external
USB hard drive, which is is also formatted with a LUKS encrypted
volume. Great, no problem, I just need to unlock the LUKS so I can
mount, right?  What's the password…?
&lt;/p&gt;

&lt;p&gt;
Another was: my passwords are stored in a KeePass2 database, which I
have stored on a cloud service. Only: it turns out it's not been
sync'd for about 4 months because I changed the DB's location and
forgot to update the sync software, so the password for the hard drive
wasn't on the cloud. Where is it? Oh, right, it's on my broken laptop,
in an encripted LUKS/LVM which can't be unlocked since the upgrade.
Goody.
&lt;/p&gt;

&lt;p&gt;
So, what to do…?
&lt;/p&gt;

&lt;p&gt;
The immediate task was to locate my recovery LiveUSB. Every good
hacker should have (at least) one of these. Mine's the openSUSE 13.1
Live Rescue image, which is spartan, but it does have everything you
need, including lvm/luks on it, and yast.  Yast it turns out didn't
help me much, I'm unsure why, but anyway, I got by with the command
line ;-)
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Unlock LUKS volumes&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
To mount a LUKS-encrypted drive you first need to unlock the LUKS
container:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;# cryptsetup luksOpen /dev/sdb1 myusb
Enter passphrase for /dev/sdb1: 
No key available with this passphrase.
Enter passphrase for /dev/sdb1:
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Ah, yes. Got to get that passphrase. Of course, being in KeePass2 it's
a random generated hex string that no human will ever remember (that is what
password database are for, after all)… Well, we'll come back to
this…
&lt;/p&gt;

&lt;p&gt;
So, need to unlock the volume on the laptop…
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#cryptsetup luksOpen /dev/sda3 laptop&lt;/span&gt;
Enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; /dev/sda3:
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Okay, so it opened, great! (The problem after the upgrade was that it
wouldn't even get this far). Now I just need to mount the home
volume. It's part of an LVG…
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;Mount the LVG(s)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;p&gt;
First, let's look at the logical volumes:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#lvs&lt;/span&gt;
  LV   VG   Attr      LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  home lvg  -wi-ao--- 179.31g                                             
  root lvg  -wi-ao---  50.00g                                             
  swap lvg  -wi-ao---   8.00g
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
That's right, I used a very simple/guessable naming
convention. Bravo. Okay, the passwords file is somewhere in 'home',
let's mount it
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mount /dev/laptop/home /mnt&lt;/span&gt;
&lt;span class="c"&gt;# ls /mnt&lt;/span&gt;
guest mjl
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
W00t! Alright, now I can grab that KeePass database, shove it on an SD
chip and then load it up in Keepass2Android on my smart phone (the
LiveUSB doesn't have any KeePass software… hmm, better do something
about that later).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkdir /var/tmp/sdc&lt;/span&gt;
&lt;span class="c"&gt;# mount /dev/sdc1 /var/tmp/sdc&lt;/span&gt;
&lt;span class="c"&gt;# cp /mnt/home/mjl/keys/db.kdbx /var/tmp/sdc&lt;/span&gt;
&lt;span class="c"&gt;# umount /var/tmp/sdc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Awesome. Now I can open up the password database, and laboriously
transcribe that generated passphrase to unlock the backup drive, when
I need to
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;Long story shorter&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;p&gt;
So in a nutshell (assuming you have your password stored &lt;i&gt;somewhere
you can get to&lt;/i&gt; !), you can do this:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Boot to a LiveUSB
&lt;/li&gt;
&lt;li&gt;Start a Terminal, become root (on the Live system)
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;tail -f /var/log/messages|grep Attached&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;Plug in the backup drive, watch which device gets attached (look
for a message like "2014-11-09T22:22:13.742555+11:00 milo kernel:
[ 4678.150011] sd 7:0:0:0: &lt;i&gt;[sdb]&lt;/i&gt; Attached SCSI disk" where
&lt;i&gt;[sdb]&lt;/i&gt; will be dependant on your devices, but that's the device
you're looking for
&lt;/li&gt;
&lt;li&gt;unlock it &lt;b&gt;cryptsetup luksOpen /dev/sdb1 mybackup&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;make a mount point if necessary:  &lt;b&gt;mkdir /recover&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;If it's a raw partition, you can mount now &lt;b&gt;mount
/dev/mapper/mybackup /recover&lt;/b&gt;, otherwise continue to LVM
&lt;/li&gt;
&lt;li&gt;list the logical LVM volumes with &lt;b&gt;lvs&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;pick a volume (e.g. "myvolume") and mount it
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mount /dev/mapper/mybackup/myvolume /recover&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now you can navigate the volume and view/copy files.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-3" class="outline-3"&gt;
&lt;h3 id="sec-1-3"&gt;Unmounting&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-3"&gt;
&lt;p&gt;
You need to first umount the volume, and then close the LUKS:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# umount /recover&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup luksClose mybackup&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>LUKS</category><category>LVM</category><category>encryption</category><category>linux</category><guid>http://milosophical.me/blog/mounting-lukslvm-from-a-liveusb.html</guid><pubDate>Sun, 09 Nov 2014 10:30:25 GMT</pubDate></item><item><title>Fixing Java CA Certificates on openSUSE</title><link>http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently switched back to openSUSE after a brief stint with Ubuntu. I guess you need to try other things out to know how good you have it, eh?  Anyway, I'm playing with &lt;a href="https://github.com/technomancy/leiningen" title="Leiningen build tool for Clojure"&gt;Leiningen&lt;/a&gt; and &lt;a href="https://github.com/quil/quil" title="Quil Clojure wrapper for Processing"&gt;Quil&lt;/a&gt;, but for some reason or other, I could not get Leiningen to self-install, because of an exception:
&lt;/p&gt;&lt;pre style="text-align:center;"&gt;java.security.KeyStoreException: problem accessing trust storejava.io.IOException: Invalid keystore format&lt;/pre&gt;
&lt;p&gt;
It turns out that the java keystore is somehow corrupt on OpenJDK / openSUSE 12.3. Not sure who's at fault, but here's how to fix it.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>certificates</category><category>fix</category><category>hacking</category><category>java</category><category>openSUSE</category><guid>http://milosophical.me/blog/2013/05/24/fixing-java-ca-certificates-on-opensuse.html</guid><pubDate>Fri, 24 May 2013 04:03:15 GMT</pubDate></item><item><title>DNS Caching in Ubuntu Desktop</title><link>http://milosophical.me/blog/2013/02/24/dns-caching-in-ubuntu-desktop.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;In a &lt;a href="http://sinewalker.wordpress.com/2012/01/11/implementing-a-caching-only-dns-on-debian/"&gt;previous blog entry&lt;/a&gt; I described setting up a caching-only DNS server to speed up hostname resolution on Debian systems.  I've recently been playing with Ubuntu and noticed that this hack is not working.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2013/02/24/dns-caching-in-ubuntu-desktop.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>DNS</category><category>NetworkManager</category><category>hacking</category><category>howto</category><category>networks</category><category>ubuntu</category><guid>http://milosophical.me/blog/2013/02/24/dns-caching-in-ubuntu-desktop.html</guid><pubDate>Sun, 24 Feb 2013 00:32:32 GMT</pubDate></item><item><title>Java virtual memory limits again</title><link>http://milosophical.me/blog/2012/07/31/java-virtual-memory-limits-again-2.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;p&gt;I think I can finally put &lt;a title="32-bit Windows and JVM virtual memory limit" href="http://sinewalker.wordpress.com/2007/03/04/32-bit-windows-and-jvm-virtual-memory-limit"&gt;this old walnut&lt;/a&gt; to bed, having just updated it with some observations made by guru's of Stack Overflow. Hooray, only took me four years :-P&lt;/p&gt;</description><category>hacking</category><category>java</category><category>virtual memory</category><category>windows</category><guid>http://milosophical.me/blog/2012/07/31/java-virtual-memory-limits-again-2.html</guid><pubDate>Tue, 31 Jul 2012 02:50:57 GMT</pubDate></item><item><title>Windows 7 logon background hack</title><link>http://milosophical.me/blog/2012/05/18/windows-7-logon-background-hack.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;This is common knowledge, yet strangely every time I rebuild my work PC (which is too often! Gah!) I try and Google the location of Registry keys and folders and always, always get a bum-steer. So here, have another (bum-steer?) version of this hack on the Net.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/05/18/windows-7-logon-background-hack.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hacking</category><category>registry</category><category>windows</category><guid>http://milosophical.me/blog/2012/05/18/windows-7-logon-background-hack.html</guid><pubDate>Fri, 18 May 2012 11:56:28 GMT</pubDate></item><item><title>Install Emacs24 Snapshot on Debian, Ubuntu and Windows 7</title><link>http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I just can't wait for &lt;a title="An overview of what's coming in Emacs 24" href="http://www.masteringemacs.org/articles/2011/12/06/what-is-new-in-emacs-24-part-1/"&gt;Emacs24&lt;/a&gt; to be released! (I know, it's in beta and it'll be officially released Real Soon Now, but my catalyst is Technomancy's ESK2 which is such an improvement over ESK1, and it needs Emacs 24).
&lt;/p&gt;
&lt;p&gt;
In &lt;a title="Build/Install emacs 24 on debian" href="http://sinewalker.wordpress.com/2012/01/15/build-and-install-emacs24-on-debian-squeeze/"&gt;my last post&lt;/a&gt; I had steps to build emacs from source-code. This is worth following for hacker cred, but it soon gets tedious if you have a lot of systems to put emacs on. As pointed out by a few readers, there are some snapshot builds available for different platforms. This post lists steps for installing the pre-built snapshots, for the three operating systems that I use.
&lt;/p&gt;


&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>debian</category><category>emacs</category><category>emacs24</category><category>hacking</category><category>tips</category><category>ubuntu</category><category>windows</category><guid>http://milosophical.me/blog/2012/02/13/install-emacs24-snapshot-on-debian-ubuntu-and-windows-7.html</guid><pubDate>Mon, 13 Feb 2012 00:15:29 GMT</pubDate></item><item><title>Build and install Emacs24 on Debian squeeze</title><link>http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;Hacking in Debian is so easy (one of the reasons I switched). Take, for instance, building Emacs. This is such a piece of cake compared to the weird hoops you have to go through to get all the build dependencies on other platforms. It's something I never tried before, simply because it was too daunting trying to figure out all the packages I need to install. But apt-get has this awesome --build-deps switch...

&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>build-deps</category><category>debian</category><category>emacs</category><category>hacking</category><category>how-to</category><guid>http://milosophical.me/blog/2012/01/15/build-and-install-emacs24-on-debian-squeeze.html</guid><pubDate>Sun, 15 Jan 2012 11:57:54 GMT</pubDate></item><item><title>Implementing a caching-only DNS on Debian</title><link>http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;After 3 years of sticking with Novell, I recently switched away from openSUSE to &lt;a title="Debian GNU/Linux" href="http://www.debian.org" target="_blank"&gt;Debian&lt;/a&gt;. There are a few reasons why, but I won't bore you with them. So far I'm liking it. There are a few things to set up before I settle in, and one is slow DNS lookup.


&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>DNS</category><category>bind</category><category>debian</category><category>hacking</category><category>network</category><guid>http://milosophical.me/blog/2012/01/11/implementing-a-caching-only-dns-on-debian.html</guid><pubDate>Wed, 11 Jan 2012 03:35:59 GMT</pubDate></item><item><title>Blogging with Emacs Org Mode</title><link>http://milosophical.me/blog/2011/12/15/blogging-with-emacs-org-mode.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;My blog is really in need of some love. One of the reasons I'm not posting very frequently (apart from just not having much to say or making time to say it) is that it is such a pain to write posts in WordPress' built in editor.  I briefly considered editing in a text editor and then cut/pasting, but usually there's a mess to clean up anyway, so it's not much fun either. &lt;/p&gt; 


&lt;p&gt;&lt;a href="http://milosophical.me/blog/2011/12/15/blogging-with-emacs-org-mode.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>emacs org-mode blogging code</category><category>hacking</category><guid>http://milosophical.me/blog/2011/12/15/blogging-with-emacs-org-mode.html</guid><pubDate>Thu, 15 Dec 2011 10:53:00 GMT</pubDate></item><item><title>Curious cursor complication with Emacs and Windows Magnifier</title><link>http://milosophical.me/blog/2011/11/30/curious-cursor-complication-with-emacs-and-windows-magnifier.html</link><dc:creator>Mike Lockhart</dc:creator><description>&lt;div&gt;&lt;p&gt;I recently noticed a bug when you start GNU Emacs win32 &lt;em&gt;after&lt;/em&gt; starting &lt;a title="Microsoft: Make items on the screen appear bigger (Magnifier)" href="http://windows.microsoft.com/en-AU/windows7/Make-items-on-the-screen-appear-bigger-Magnifier"&gt;Windows Magnifier&lt;/a&gt;: Emacs' cursor becomes a single-pixel "caret" instead of the box cursor. This makes the cursor very hard to find.
&lt;/p&gt;&lt;p&gt;&lt;a href="http://milosophical.me/blog/2011/11/30/curious-cursor-complication-with-emacs-and-windows-magnifier.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>bug</category><category>cursor</category><category>emacs</category><category>hacking</category><category>magnifier</category><category>registry</category><category>windows</category><guid>http://milosophical.me/blog/2011/11/30/curious-cursor-complication-with-emacs-and-windows-magnifier.html</guid><pubDate>Wed, 30 Nov 2011 03:17:06 GMT</pubDate></item></channel></rss>